<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>学员课程进度统计,学校管理员页面</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/layuiadmin/style/admin.css" media="all">
    <style type="text/css">
        .layui-table-cell {
            padding: 0 5px;
        }
    </style>
</head>
<body>

<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body">
            <p style="text-align: center;font-size: 22px;">
                班级详情统计
            </p>
            <div class="layui-card-body">
                <table id="SocietySchoolClassCounty-list" lay-filter="SocietySchoolClassCounty-list"></table>
            </div>
        </div>
        <div class="layui-card-body">
            <p style="text-align: center;font-size: 22px;margin-bottom: 0.8%;">
                学员学习进度统计
            </p>
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">学员姓名</label>
                    <div class="layui-input-inline">
                        <input type="text" id="studentName" name="queryObj.studentName" placeholder="请输入" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">身份证号</label>
                    <div class="layui-input-inline">
                        <input type="text" id="studentIdCardNum" name="queryObj.studentIdCardNum" placeholder="请输入" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <div class="layui-inline" style="left: 2%;">
                        <button class="layui-btn layuiadmin-btn-comm layui-btn-sm" data-type="reload" lay-submit lay-filter="SocietySchoolCourse-search">
                            <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>查询
                        </button>
                    </div>
                    <!--<div class="layui-inline " style="left: 2%;">
                        <button type="button" class="layui-btn layuiadmin-btn-comm layui-btn-sm" onclick="exportData()">
                            <i class="layui-icon layui-icon-export layuiadmin-button-btn"></i>导出
                        </button>
                    </div>-->
                </div>
            </div>

            <table id="SocietySchoolCourse-list" lay-filter="SocietySchoolCourse-list"></table>
            <script type="text/html" id="table-SocietySchoolCourse-list">
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="studyInfo">学习详情</a>
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="studentStudyArchives">学员学习档案</a>
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="cenfiLook">证书查看</a>
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="studentStudyProve">学时证明</a>
                <!--  <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                  <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>-->
            </script>
        </div>
    </div>
</div>
<!--进度条模板-->
<script type="text/html" id="studentLeranTpl">
    {{#  if(d.courseProgress>=0 && d.courseProgress<=30){ }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-red" lay-percent="{{d.courseProgress}}%"></div>
    </div>
    {{#  }else if(d.courseProgress==null) { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-blue" lay-percent="{{0}}%"></div>
    </div>
    {{#  }else if(d.courseProgress<=70) { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-blue" lay-percent="{{d.courseProgress}}%"></div>
    </div>
    {{#  } else { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar " lay-percent="{{d.courseProgress}}%"></div>
    </div>
    {{#  } }}
</script>
<script src="/layuiadmin/layui/layui.js"></script>
<script>
    layui.config({
        base: '/layuiadmin/' //静态资源所在路径
    }).extend({
        index:'lib/index',
        common:'common',
        $tool:'tool'
    }).use(['index','table', 'form','common','element','excel','$tool'], function(exports){
        var $ = layui.$
            ,table = layui.table
            ,common = layui.common
            ,element = layui.element
            ,$tool = layui.$tool
            ,admin = layui.admin
            ,excel = layui.excel
            ,form = layui.form;

        var queryArgs = $tool.getUrlParams();//获取查询参数
        var classId = queryArgs.id;
        var className = queryArgs.className;

        //查询
        form.on('submit(SocietySchoolCourse-search)', function(data){
            var field = data.field;
            //queryObj.studentName queryObj.studentIdCardNum
            field["queryObj.studentName"]=$('#studentName').val();
            field["queryObj.studentIdCardNum"]=$('#studentIdCardNum').val();
            //执行重载
            table.reload('SocietySchoolCourse-list', {
                where: field,page:{curr:1}
            });
        });


        defineClassTable = function () {
            var headers = layui.admin.getTokenHeader();
            table.render({
                elem: '#SocietySchoolClassCounty-list' //指定原始表格的选择器（id选择器）
                ,url:layui.setter.basePath +'/society/societySchoolClass/schoolClassDataSupCount.jsn' //模拟接口
                ,headers:headers
                ,where:{
                    'queryObj.id':classId
                }
                ,method: 'post'
                ,parseData: function(res){ //res 即为原始返回的数据
                    return {
                        "code": res.success, //解析接口状态
                        "msg": res.errMsg, //解析提示文本
                        "count": res.totalCount, //解析数据长度
                        "data": res.list //解析数据列表
                    };
                }
                ,response: {
                    statusCode: true //规定成功的状态码，默认：0
                }
                ,cols: [[
                    {type: 'numbers', fixed: 'left', title:'序号'}
                    ,{field: 'id',align: 'center', width: 200, title: '主键',sort: true,hide:true}
                    ,{field: 'ownerSchoolName',align: 'center', width:  '21%', title: '学校名称'}
                    ,{field: 'className',align: 'center', width: '15%', title: '班级名称'}
                    ,{field: 'classCode',align: 'center', width: '12%', title: '班级编码'}
                    ,{field: 'classStartTime',align: 'center', width: '10%', title: '开班时间',templet: function(d){
                            return common.DateFormat(d.classStartTime,"yyyy-MM-dd");}}
                    ,{field: 'classEndTime',align: 'center', width: '10%', title: '结束时间',templet: function(d){
                            return common.DateFormat(d.classEndTime,"yyyy-MM-dd");}}

                    ,{field: 'classPersonNum',align: 'center', width: '7%', title: '班级人数'}
                    ,{field: 'finishedPersonNum',align: 'center', width:  '12%', title: '已完成课程人数'}
                    ,{field: 'notFinishedPersonNum',align: 'center', width: '8%', title: '未完成人数',
                        templet: function(d){
                            return d.classPersonNum-d.finishedPersonNum;
                        }
                    }
                ]]
                ,autoSort: false
                ,page: false
                ,limit: 10
                ,limits: [10, 20, 30,40,50]
                ,text: {
                    none: '暂无相关数据'
                }
                ,done:function () {
                    element.init();
                }
            });
        }
        defineClassTable();

        /*
        * 定义表格
        * */
        defineTable = function () {
            var headers = layui.admin.getTokenHeader();
            table.render({
                elem: '#SocietySchoolCourse-list' //指定原始表格的选择器（id选择器）
                ,url:layui.setter.basePath +'/society/societyStudentAndCourse/selectBySupStudentProAndClass.jsn' //模拟接口
                ,headers:headers
                ,where:{
                    'queryObj.classId':classId
                }
                ,method: 'post'
                ,parseData: function(res){ //res 即为原始返回的数据
                    return {
                        "code": res.success, //解析接口状态
                        "msg": res.errMsg, //解析提示文本
                        "count": res.totalCount, //解析数据长度
                        "data": res.list //解析数据列表
                    };
                }
                ,response: {
                    statusCode: true //规定成功的状态码，默认：0
                }
                ,cols: [[
                    {type: 'numbers', fixed: 'left', title:'序号'}
                    ,{field: 'id',align: 'center', width: 200, title: '主键',sort: true,hide:true}
                    ,{field: 'studentName',align: 'center', width:  '7%', title: '姓名'}
                    ,{field: 'studentIdCardNum',align: 'center', width: '10%', title: '身份证号'}
                    ,{field: 'studentPohone',align: 'center', width: '8%', title: '手机号'}
                    ,{field: 'courseName',align: 'center', width:  '10%', title: '课程名称'}
                    ,{field: 'schoolName',align: 'center', width: '12%', title: '学校名称',hide:true}
                    ,{field: 'className',align: 'center', width: '12%', title: '班级名称',hide:true}
                    ,{field: 'totalLessons',align: 'center', width:  '7%', title: '总课时'}
                    ,{field: 'finishNodeNum',align: 'center', width: '8%', title: '已完成课时'}
                    ,{field: 'courseProgress',width: '15%',align: 'center', title: '学习进度',templet:"#studentLeranTpl",sort: true}
                    ,{title: '操作', align: 'center', fixed: 'right', toolbar: '#table-SocietySchoolCourse-list'}
                ]]
                ,autoSort: false
                ,page: true
                ,limit: 10
                ,limits: [10, 20, 30,40,50]
                ,text: {
                    none: '暂无相关数据'
                }
                ,done:function () {
                    element.init();
                }
            });

            //为toolbar添加事件响应
            table.on('tool(SocietySchoolCourse-list)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                /*var data = obj.data;*///获得当前行数据
                //区分事件
                switch(obj.event){
                    case 'del':
                        deleteVo(obj);
                        break;
                    case 'edit':
                        editVo(obj);
                        break;
                    case 'studyInfo':
                        studyInfo(obj);
                        break;
                    case 'studentStudyArchives':
                        studentStudyArchives(obj);
                        break;
                    case 'cenfiLook':
                        cenfiLook(obj);
                        break;
                    case 'studentStudyProve':
                        studentStudyProve(obj);
                        break;
                };
            });

            //监听排序事件
            table.on('sort(SocietySchoolCourse-list)', function(obj){ //注：sort是工具条事件名，LAY-app-province-list是table原始容器的属性 lay-filter="对应的值"
                var sort = obj.field;
                //默认排序
                switch(obj.field){
                    case 'id':
                        sort ="ID";
                        break;
                    case 'createTime':
                        sort ="CREATE_TIME";
                        break;
                    case 'createUserId':
                        sort ="CREATE_USER_ID";
                        break;
                    case 'createUserName':
                        sort ="CREATE_USER_NAME";
                        break;
                    case 'ownerSchoolId':
                        sort ="OWNER_SCHOOL_ID";
                        break;
                    case 'ownerSchoolName':
                        sort ="OWNER_SCHOOL_NAME";
                        break;
                    case 'ownerMajorId':
                        sort ="OWNER_MAJOR_ID";
                        break;
                    case 'ownerMajorName':
                        sort ="OWNER_MAJOR_NAME";
                        break;
                    case 'courseClsId':
                        sort ="COURSE_CLS_ID";
                        break;
                    case 'courseClsName':
                        sort ="COURSE_CLS_NAME";
                        break;
                    case 'courseName':
                        sort ="COURSE_NAME";
                        break;
                    case 'courseImage':
                        sort ="COURSE_IMAGE";
                        break;
                    case 'courseDesc':
                        sort ="COURSE_DESC";
                        break;
                    case 'courseOrgPrice':
                        sort ="COURSE_ORG_PRICE";
                        break;
                    case 'coursePrice':
                        sort ="COURSE_PRICE";
                        break;
                    case 'totalLessons':
                        sort ="TOTAL_LESSONS";
                        break;
                    case 'courseTimeLength':
                        sort ="COURSE_TIME_LENGTH";
                        break;
                    case 'courseScore':
                        sort ="COURSE_SCORE";
                        break;
                    case 'totalStudentNum':
                        sort ="TOTAL_STUDENT_NUM";
                        break;
                    case 'finishedStudentNum':
                        sort ="FINISHED_STUDENT_NUM";
                        break;
                    case 'notFinishedStudentNum':
                        sort ="NOT_FINISHED_STUDENT_NUM";
                        break;
                    case 'orderNum':
                        sort ="ORDER_NUM";
                        break;
                    case 'isOpen':
                        sort ="IS_OPEN";
                        break;
                    case 'shState':
                        sort ="SH_STATE";
                        break;
                    case 'dataState':
                        sort ="DATA_STATE";
                        break;
                    case 'courseProgress':
                        sort ="COURSE_PROGRESS";
                        break;
                };
                if(obj.type==null){
                    table.reload('SocietySchoolCourse-list', {
                        initSort: obj//记录初始排序，如果不设的话，将无法标记表头的排序状态。
                        ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                            orderBy: sort+" "+"ASC" //排序字段
                        }
                    });
                }else {
                    //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                    table.reload('SocietySchoolCourse-list', {
                        initSort: obj//记录初始排序，如果不设的话，将无法标记表头的排序状态。
                        ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                            orderBy: sort+" "+obj.type //排序字段
                        }
                    });
                }
            });
        }
        defineTable();


        //查看
        cenfiLook = function (obj) {
            if(obj.data.learnIsFinished=='1'){
                admin.req({
                    url:layui.setter.basePath +'/society/societyStudentCertificate/selectByCourseIdAndStudentId.jsn',
                    data:{
                        'studentId':obj.data.studentId,
                        'courseId':obj.data.courseId
                    },
                    method:"post",
                    success:function (data) {
                        layer.open({
                            type: 2
                            ,title: '查看证书'
                            ,content: 'SocietyStudentCertificateLook.html'
                            ,maxmin: true
                            ,area: ['650px', '500px']
                            ,btn: ['打印', '取消']
                            ,success: function(layero, index){
                                var s = layero.find('iframe');
                                $("id",s[0].contentWindow.document).val(data.data.id);
                                //给iframe元素赋值
                                var othis = layero.find('iframe').contents().find("#SocietyStudentCertificate-form").click();

                                othis.find('span[id="studentName"]')[0].innerText=data.data.studentName;
                                othis.find('span[id="schoolName"]')[0].innerText=data.data.ownerSchoolName;
                                othis.find('span[id="courseName"]')[0].innerText=data.data.courseName;
                                othis.find('span[id="certCode"]')[0].innerText=data.data.certificateCode;
                                othis.find('span[id="sendTime"]')[0].innerText=common.DateFormat(data.data.certificateTime,"yyyy年MM月dd日");

                            }
                            ,yes: function(index, layero){
                                var submit = layero.find('iframe').contents().find("#SocietyStudentCertificate-form-edit");
                                submit.trigger('click');
                            }
                        });
                    }
                });
            }else {
                return layer.msg("学生未完成课程，没有证书!");
            }
        }

        /*
            * 查看学习进度详情
            * */
        studyInfo = function (obj) {
            newOpen('views/society/xianqusupervisepeople/studyCount/SocietyStudentStudyInfo.html', obj.data,"学员学习档案");
        }

        studentStudyProve = function(obj){
            if(obj.data.learnIsFinished=='1'){
                newOpen("views/society/xianqusupervisepeople/schoolclasscount/SocietyStudentStudyProvePDF.html", obj.data,obj.data.studentName+"学时证明");
            }else {
                return layer.msg('学生未学完课程!');
            }
        }

        /**
         * 学员学习档案导出pdf
         * @param obj
         */
        studentStudyArchives = function(obj){
            if(obj.data.learnIsFinished=='1'){
                newOpen("views/society/xianqusupervisepeople/studyCount/SocietyStudentStudyPDF.html", obj.data,"学员学习档案");
            }else {
                return layer.msg('学生未学完课程!');
            }
        }

        function newOpen(url,params,str) {
            var pStr = '';
            for(var p in params){
                if(pStr.indexOf("?")==-1){
                    pStr += "?"+p+"="+encodeURI(params[p]);
                }else {
                    pStr += "&"+p+"="+encodeURI(params[p]);
                }
            }
            top.layui.index.openTabsPage(url+pStr,str);
        }

        //Excel导出
        exportData = function () {
            layer.confirm('确定导出吗？', function(index){
                exportDataDetail();
            });
        }

        exportDataDetail = function () {
            layer.open({
                title: '提示'
                ,content: '正在导出，请稍后！！！'
                ,id:'id_alert'
                ,btn:[]
            });
            admin.req({
                url:layui.setter.basePath +'/society/societyStudentAndCourse/listByObjforschoolRenShe.jsn',
                data:{
                    'queryObj.studentName':$('input[name="queryObj.studentName"]').val()
                    ,'queryObj.studentIdCardNum':$('input[name="queryObj.studentIdCardNum"]').val()
                    ,'queryObj.className':$('input[name="queryObj.className"]').val()
                    ,'queryObj.schoolName':$('input[name="queryObj.schoolName"]').val()
                    ,'queryObj.courseProgress':$('input[name="queryObj.courseProgress"]').val()
                    ,'queryObj.courseProgressStart':$('input[name="queryObj.courseProgressStart"]').val()
                    ,'queryObj.courseProgressEnd':$('input[name="queryObj.courseProgressEnd"]').val()
                    ,'isRealNameAuth':$('#isRealNameAuth').val()
                },
                method:"post",
                success:function (data) {
                    if(data.list&&data.list.length>0){
                        // 1. 数组头部新增表头

                        // 2. 如果需要调整顺序，请执行梳理函数
                        var dataE = excel.filterExportData(data.list, {
                            studentName: 'studentName',
                            studentIdCardNum: 'studentIdCardNum',
                            stuPhone: 'stuPhone',
                            schoolName: 'schoolName',
                            className: 'className',
                            totalLessons: 'totalLessons',
                            finishNodeNum: 'finishNodeNum',
                            isRealName: 'isRealName',
                            isComment: 'isComment',
                            isTepar: 'isTepar',
                            learnIsFinished: 'learnIsFinished'
                        });

                        dataE.unshift({
                            studentName: '学生姓名',
                            studentIdCardNum: '身份证号',
                            stuPhone: '手机号',
                            schoolName: '学校名称',
                            className: '班级名称',
                            totalLessons: '要求总学时',
                            finishNodeNum: '已完成学时',
                            isRealName: '是否实名',
                            isComment: '是否评价',
                            isTepar: '是否通过考试',
                            learnIsFinished: '学习状态'
                        })
                        dataE.unshift({
                            studentName: '学习统计导出',
                            studentIdCardNum: '',
                            stuPhone: '',
                            schoolName: '',
                            className: '',
                            totalLessons: '',
                            finishNodeNum: '',
                            isRealName: '',
                            isComment: '',
                            isTepar: '',
                            learnIsFinished: ''
                        })
                        // 3. 执行导出函数，系统会弹出弹框

                        //标题行样式
                        excel.setExportCellStyle(dataE, 'A1:K2', {
                            s: {
                                fill: { bgColor: { indexed: 64 }, fgColor: { rgb: "C0C0C0" } },
                                alignment: {
                                    horizontal: 'center',
                                    vertical: 'center'
                                },
                                font:{
                                    name:'微软雅黑',
                                    sz: '10',
                                    bold: true
                                },
                                border:{
                                    top: {style: 'thin', color: {rgb: 'FF000000'}},
                                    bottom: {style: 'thin', color: {rgb: 'FF000000'}},
                                    left: {style: 'thin', color: {rgb: 'FF000000'}},
                                    right: {style: 'thin', color: {rgb: 'FF000000'}}
                                }
                            }
                        }, function(cell, newCell, row, config, currentRow, currentCol, fieldKey) {
                            // 回调参数，cell:原有数据，newCell:根据批量设置规则自动生成的样式，row:所在行数据，config:传入的配置,currentRow:当前行索引,currentCol:当前列索引，fieldKey:当前字段索引
                            return newCell;
                        } );
                        //数据行样式
                        excel.setExportCellStyle(dataE, 'A3:K'+Number(dataE.length), {
                            s: {
                                alignment: {
                                    horizontal: 'center',
                                    vertical: 'center'
                                },
                                font:{
                                    name:'微软雅黑',
                                    sz: '10'
                                },
                                border:{
                                    top: {style: 'thin', color: {rgb: 'FF000000'}},
                                    bottom: {style: 'thin', color: {rgb: 'FF000000'}},
                                    left: {style: 'thin', color: {rgb: 'FF000000'}},
                                    right: {style: 'thin', color: {rgb: 'FF000000'}}
                                }
                            }
                        }, function(cell, newCell, row, config, currentRow, currentCol, fieldKey) {
                            // 回调参数，cell:原有数据，newCell:根据批量设置规则自动生成的样式，row:所在行数据，config:传入的配置,currentRow:当前行索引,currentCol:当前列索引，fieldKey:当前字段索引
                            return newCell;
                        } );
                        // 设置列宽
                        var colConf = excel.makeColConfig({
                            'B': 110,
                            'Z': 80
                        }, 80);
                        var merges = excel.makeMergeConfig([
                            ['A1','K1']
                        ]);
                        //导出
                        excel.exportExcel({
                            sheet1: dataE
                        }, '学习进度统计_'+ new Date().toLocaleString() +'.xlsx', 'xlsx', {
                            extend: {
                                sheet1:{
                                    '!merges': merges,
                                    '!cols': colConf
                                }
                            }
                        });
                        $('#id_alert').parent().find('a[class="layui-layer-btn0"]').click()
                        layer.msg('导出成功！');
                    }else{
                        $('#id_alert').parent().find('a[class="layui-layer-btn0"]').click()
                        layer.msg('无数据！');
                    }

                },
            });
        }


    });

</script>
</body>
</html>

