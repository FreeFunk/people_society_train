<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>课程管理</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/layuiadmin/style/admin.css" media="all">
    <link rel="stylesheet" href="/layuiadmin/modules/layui_ext/dtree/dtree.css">
    <link rel="stylesheet" href="/layuiadmin/modules/layui_ext/dtree/font/dtreefont.css">
    <style type="text/css">
        .layui-table-cell {
            padding: 0 5px;
        }
    </style>
</head>
<body>

<div class="layui-fluid">
    <div class="layui-row layui-col-space5">
        <div class="layui-col-xs3 layui-col-sm3 layui-col-md3">
            <div class="layui-card">
                <div style="height: 550px;overflow: auto;" id="toolbarDiv">
                    <ul id="majorTree" class="dtree" data-id="0"></ul>
                </div>
            </div>
        </div>
        <div class="layui-col-xs9 layui-col-sm9 layui-col-md9">
            <div class="layui-card">
                <div class="layui-form layui-card-header layuiadmin-card-header-auto">
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">课程名称</label>
                            <div class="layui-input-inline">
                                <input type="text" name="queryObj.courseName" placeholder="请输入" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                    <!--    <div class="layui-inline">
                            <label class="layui-form-label">搜索条件2</label>
                            <div class="layui-input-inline">
                                <input type="text" name="queryObj.name" placeholder="请输入" autocomplete="off" class="layui-input">
                            </div>
                        </div>-->
                        <div class="layui-inline">
                            <button class="layui-btn layuiadmin-btn-comm layui-btn-sm" data-type="reload" lay-submit lay-filter="SocietySchoolCourse-search">
                                <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>查询
                            </button>
                        </div>
                    </div>
                </div>
                <div class="layui-card-body">
                    <div style="padding-bottom: 10px;">
                        <!--<button class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="batchdel">
                            <i class="layui-icon">&#xe640;</i>删除
                        </button>-->
                        <button type="button" class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="add">
                            <i class="layui-icon">&#xe654;</i>添加
                        </button>
                    </div>
                    <table id="SocietySchoolCourse-list" lay-filter="SocietySchoolCourse-list"></table>
                    <script type="text/html" id="table-SocietySchoolCourse-list">
                        <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="nodeMng"><i class="layui-icon layui-icon-list"></i>章节管理</a>
                        <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="testMng"><i class="layui-icon layui-icon-survey"></i>试卷管理</a>
                        <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="/layuiadmin/layui/layui.js"></script>
<script>
        layui.config({
            base: '/layuiadmin/' //静态资源所在路径
        }).extend({
            index:'lib/index',
            $tool:'tool',
            common:'common',
            dtree:'layui_ext/dtree/dtree'
        }).use(['index','table', 'form','common','dtree','$tool'], function(exports){
            var $ = layui.$
                ,table = layui.table
                ,common = layui.common
                ,admin = layui.admin
                ,dtree = layui.dtree
                ,$tool = layui.$tool
                ,form = layui.form;

            // 查询所有的专业初始化树
            var headers = layui.admin.getTokenHeader();
            var majorTree = dtree.render({
                elem: "#majorTree",
                scroll:"#toolbarDiv", // 绑定div元素
                initLevel: "1",
                type:"all"  ,// 改为全量加载，即取消自动加载
                headers:headers,
                url:layui.setter.basePath +'/society/societySchoolMajor/listForDtreeBySchoolId.jsn', //模拟接口
            });
            // 绑定图标的点击事件
            dtree.on("changeTree(majorTree)",function(obj){
                if(obj.show){
                    var nodeId = obj.param.nodeId;
                    //查询专业下面的所有的课程分类
                    admin.req({
                        url:layui.setter.basePath +'/society/societySchoolCourseCls/listByMajorIdAndSchoolId.jsn',
                        data:{'majorId':nodeId},
                        method:"post",
                        success:function (data) {
                            // 调用内置函数，第二个参数为json数组，如果你不想访问默认的url，你可以自己使用ajax访问你的url，然后将data数据传入进来即可。
                            majorTree.getChild($(obj.dom).parent("div"), data.data);
                        },
                    });
                }
            });

            // 绑定节点点击
            dtree.on("node('majorTree')" ,function(obj){
                if(obj.param.parentId=='ROOT'){
                    //查询专业下所有课程
                    table.reload('SocietySchoolCourse-list', {
                        where: {'queryObj.ownerMajorId':obj.param.nodeId,'queryObj.courseClsId':''},page:{curr:1}
                    });
                }else {
                    //查询课程分类下所有课程
                    table.reload('SocietySchoolCourse-list', {
                        where: {'queryObj.ownerMajorId':'','queryObj.courseClsId':obj.param.nodeId},page:{curr:1}
                    });
                }
                //layer.msg(JSON.stringify(obj.param));
            });
            //查询
            form.on('submit(SocietySchoolCourse-search)', function(data){
                var field = data.field;

                //执行重载
                table.reload('SocietySchoolCourse-list', {
                    where: field,page:{curr:1}
                });
            });

            /*
            * 定义表格
            * */
            defineTable = function () {
                var headers = layui.admin.getTokenHeader();
                table.render({
                    elem: '#SocietySchoolCourse-list' //指定原始表格的选择器（id选择器）
                    ,url:layui.setter.basePath +'/society/societySchoolCourse/schoollistpage.jsn' //模拟接口
                    ,headers:headers
                    ,method: 'post'
                    ,parseData: function(res){ //res 即为原始返回的数据
                        return {
                            "code": res.success, //解析接口状态
                            "msg": res.errMsg, //解析提示文本
                            "count": res.totalCount, //解析数据长度
                            "data": res.list //解析数据列表
                        };
                    }
                    ,response: {
                        statusCode: true //规定成功的状态码，默认：0
                    }
                    ,cols: [[
                        {type: 'numbers', fixed: 'left'}
                    ,{field: 'id',align: 'center', width: 200, title: '主键',sort: true,hide:true}
                    /*,{field: 'createTime',align: 'center', width: 200, title: '创建时间',templet: function(d){
                    return common.DateFormat(d.createTime,"yyyy-MM-dd");},sort: true}*/
           /* ,{field: 'createUserId',align: 'center', width: 200, title: '创建人ID',sort: true}
            ,{field: 'createUserName',align: 'center', width: 200, title: '创建人',sort: true}
            ,{field: 'ownerSchoolId',align: 'center', width: 200, title: '所属学校ID',sort: true}
            ,{field: 'ownerSchoolName',align: 'center', width: 200, title: '所属学校名',sort: true}
            ,{field: 'ownerMajorId',align: 'center', width: 200, title: '所属专业ID',sort: true}
            ,{field: 'ownerMajorName',align: 'center', width: 200, title: '所属专业名',sort: true}
            ,{field: 'courseClsId',align: 'center', width: 200, title: '所属课程分类ID',sort: true}
            ,{field: 'courseClsName',align: 'center', width: 200, title: '所属课程分类名',sort: true}*/
            ,{field: 'courseImage',align: 'center', width: '8%', title: '课程封面',templet: function(d){
                                return "<img style=\"height: 30px;\" src="+layui.setter.ImgPath+d.courseImage+" >";}
                                }
            ,{field: 'courseName',align: 'center', width: '25%', title: '课程名称'}
            /*,{field: 'courseDesc',align: 'center', width: 200, title: '课程简介',sort: true}*/
            ,{field: 'coursePrice',align: 'center', width: '8%', title: '课程价格'}
                        ,{field: 'totalLessons',align: 'center', width:  '8%', title: '总课时数'}
      /*
            ,{field: 'courseTimeLength',align: 'center', width:  '10%', title: '课程时 长'}*/
           /* ,{field: 'courseScore',align: 'center', width: 200, title: '课程评分',sort: true}
            ,{field: 'totalStudentNum',align: 'center', width: 200, title: '学习总人数',sort: true}
            ,{field: 'finishedStudentNum',align: 'center', width: 200, title: '完成人数',sort: true}
            ,{field: 'notFinishedStudentNum',align: 'center', width: 200, title: '未完成人数',sort: true}*/
            ,{field: 'orderNum',align: 'center', width:  '8%', title: '排序号'}
            /*,{field: 'isOpen',align: 'center', width: 200, title: '是否公开(1:是，0:否)',sort: true}
            ,{field: 'shState',align: 'center', width: 200, title: '审核状态(1:通过,0:审核中,-1:不通过)',sort: true}
            ,{field: 'dataState',align: 'center', width: 200, title: '数据状态',sort: true}*/
                    ,{title: '操作', minWidth: 150, align: 'center', fixed: 'right', toolbar: '#table-SocietySchoolCourse-list'}
            ]]
            ,autoSort: false
                    ,page: true
                    ,limit: 50
                    ,limits: [10, 20, 30,40,50]
                    ,text: {
                    none: '暂无相关数据'
                }
            });

                //为toolbar添加事件响应
                table.on('tool(SocietySchoolCourse-list)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                    /*var data = obj.data;*///获得当前行数据
                    //区分事件
                    switch(obj.event){
                        case 'del':
                            deleteVo(obj);
                            break;
                        case 'edit':
                            editVo(obj);
                            break;
                        case 'nodeMng':
                            nodeMngVo(obj);
                            break;
                        case 'testMng':
                            testMngVo(obj);
                            break;
                    };
                });

                //监听排序事件
                table.on('sort(SocietySchoolCourse-list)', function(obj){ //注：sort是工具条事件名，LAY-app-province-list是table原始容器的属性 lay-filter="对应的值"
                    var sort = obj.field;
                    //默认排序
                    switch(obj.field){
                        case 'id':
                            sort ="ID";
                            break;
                        case 'createTime':
                            sort ="CREATE_TIME";
                            break;
                        case 'createUserId':
                            sort ="CREATE_USER_ID";
                            break;
                        case 'createUserName':
                            sort ="CREATE_USER_NAME";
                            break;
                        case 'ownerSchoolId':
                            sort ="OWNER_SCHOOL_ID";
                            break;
                        case 'ownerSchoolName':
                            sort ="OWNER_SCHOOL_NAME";
                            break;
                        case 'ownerMajorId':
                            sort ="OWNER_MAJOR_ID";
                            break;
                        case 'ownerMajorName':
                            sort ="OWNER_MAJOR_NAME";
                            break;
                        case 'courseClsId':
                            sort ="COURSE_CLS_ID";
                            break;
                        case 'courseClsName':
                            sort ="COURSE_CLS_NAME";
                            break;
                        case 'courseName':
                            sort ="COURSE_NAME";
                            break;
                        case 'courseImage':
                            sort ="COURSE_IMAGE";
                            break;
                        case 'courseDesc':
                            sort ="COURSE_DESC";
                            break;
                        case 'coursePrice':
                            sort ="COURSE_PRICE";
                            break;
                        case 'totalLessons':
                            sort ="TOTAL_LESSONS";
                            break;
                        case 'courseTimeLength':
                            sort ="COURSE_TIME_LENGTH";
                            break;
                        case 'courseScore':
                            sort ="COURSE_SCORE";
                            break;
                        case 'totalStudentNum':
                            sort ="TOTAL_STUDENT_NUM";
                            break;
                        case 'finishedStudentNum':
                            sort ="FINISHED_STUDENT_NUM";
                            break;
                        case 'notFinishedStudentNum':
                            sort ="NOT_FINISHED_STUDENT_NUM";
                            break;
                        case 'orderNum':
                            sort ="ORDER_NUM";
                            break;
                        case 'isOpen':
                            sort ="IS_OPEN";
                            break;
                        case 'shState':
                            sort ="SH_STATE";
                            break;
                        case 'dataState':
                            sort ="DATA_STATE";
                            break;
                    };
                    if(obj.type==null){
                        return;
                    }
                    //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                    table.reload('SocietySchoolCourse-list', {
                        initSort: obj//记录初始排序，如果不设的话，将无法标记表头的排序状态。
                        ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                            orderBy: sort+" "+obj.type //排序字段
                        }
                    });
                });
            }
            defineTable();

            //删除
            deleteVo = function (obj) {
                layer.confirm('确定删除此记录吗？', function(index){
                    admin.req({
                        url:layui.setter.basePath +'/society/societySchoolCourse/updateById.jsn',
                        data:{'ids':obj.data.id},
                        method:"post",
                        success:function (data) {
                            layer.close(index);
                            if(data.success){
                                table.reload('SocietySchoolCourse-list',
                                    {page:
                                            { curr: common.deleteJumpPage(obj) // 执行页面跳转方法
                                            }
                                    }
                                );
                                layer.msg('删除成功', {
                                    icon: 1
                                });
                            }
                        },
                    });
                });
            }
            //编辑
            editVo = function (obj) {
                layer.open({
                    type: 2
                    ,title: '编辑'
                    ,content: 'SocietySchoolCourseEdit.html'
                    ,maxmin: true
                    ,area: ['650px', '500px']
                    ,btn: ['确定', '取消']
                    ,success: function(layero, index){
                        var s = layero.find('iframe');
                        $("id",s[0].contentWindow.document).val(obj.data.id);
                        //给iframe元素赋值
                        var othis = layero.find('iframe').contents().find("#SocietySchoolCourse-form").click();

                        othis.find('input[name="id"]').val(obj.data.id);
                        othis.find('input[name="createTime"]').val(obj.data.createTime);
                        othis.find('input[name="createUserId"]').val(obj.data.createUserId);
                        othis.find('input[name="createUserName"]').val(obj.data.createUserName);
                        othis.find('input[name="ownerSchoolId"]').val(obj.data.ownerSchoolId);
                        othis.find('input[name="ownerSchoolName"]').val(obj.data.ownerSchoolName);
                        othis.find('input[name="ownerMajorId"]').val(obj.data.ownerMajorId);
                        othis.find('input[name="ownerMajorName"]').val(obj.data.ownerMajorName);
                        othis.find('input[name="courseClsId"]').val(obj.data.courseClsId);
                        othis.find('input[name="courseClsName"]').val(obj.data.courseClsName);
                        othis.find('input[name="courseName"]').val(obj.data.courseName);
                        /*othis.find('input[name="courseImage"]').val(obj.data.courseImage);*/
                        othis.find('input[name="courseDesc"]').val(obj.data.courseDesc);
                        othis.find('input[name="coursePrice"]').val(obj.data.coursePrice);
                        othis.find('input[name="totalLessons"]').val(obj.data.totalLessons);
                        othis.find('input[name="courseTimeLength"]').val(obj.data.courseTimeLength);
                        othis.find('input[name="courseOrgPrice"]').val(obj.data.courseOrgPrice);
                        othis.find('input[name="courseScore"]').val(obj.data.courseScore);
                        othis.find('input[name="totalStudentNum"]').val(obj.data.totalStudentNum);
                        othis.find('input[name="finishedStudentNum"]').val(obj.data.finishedStudentNum);
                        othis.find('input[name="notFinishedStudentNum"]').val(obj.data.notFinishedStudentNum);
                        othis.find('input[name="orderNum"]').val(obj.data.orderNum);
                        othis.find('input[name="isOpen"]').val(obj.data.isOpen);
                        othis.find('input[name="shState"]').val(obj.data.shState);
                        othis.find('input[name="shState"]').val(obj.data.shState);
                        othis.find('input[name="courseStudyNum"]').val(obj.data.courseStudyNum);
                        othis.find('select[name="courseIsNeedFaceContrast"]').val(obj.data.courseIsNeedFaceContrast);

                        othis.find('input[id="courseStudyNumInput"]').val(obj.data.courseStudyNum);
                        othis.find('input[id="courseIsNeedFaceContrastInput"]').val(obj.data.courseIsNeedFaceContrast);
                        othis.find('input[name="teacherNameInput"]').val(obj.data.teacherId+"@@"+obj.data.teacherName);
                        othis.find('img[id="courseImageImgId"]').attr('src', obj.data.courseImage);
                    }
                    ,yes: function(index, layero){
                        var submit = layero.find('iframe').contents().find("#SocietySchoolCourse-form-edit");
                        submit.trigger('click');
                    }
                });
            }
            //章节管理
            nodeMngVo = function (obj) {
                $tool.JumpPage('SocietySchoolCourseNodeList.html',obj.data);
            }
            //试卷管理
            testMngVo = function (obj) {
                //课程ID
                var courseId = obj.data.id;
                //课程名
                var courseName = obj.data.courseName;
                window.location.href = 'SocietyTestPaperList.html?courseId='+courseId+"&courseName="+encodeURI(courseName);
            }

            //点击事件
            var active = {
                //批量删除
                batchdel: function(){
                    var checkStatus = table.checkStatus('SocietySchoolCourse-list')
                        ,checkData = checkStatus.data; //得到选中的数据

                    if(checkData.length === 0){
                        return layer.msg('请选择数据');
                    }

                    layer.confirm('确定删除吗？', function(index) {
                        var ids = "" ;
                        for(var i = 0;i<checkData.length;i++){
                            if(ids==""){
                                ids= checkData[i].id;
                            }else {
                                ids = ids+","+checkData[i].id;
                            }
                        }
                        admin.req({
                            url:layui.setter.basePath +'/society/societySchoolCourse/updateByIds.jsn',
                            data:{'ids':ids},
                            method:"post",
                            success:function (data) {
                                table.reload('SocietySchoolCourse-list',
                                    {page:
                                        { curr: common.deleteDulJumpPage(checkStatus) // 执行页面跳转方法
                                        }
                                    }
                                );
                                layer.msg('删除成功', {
                                    icon: 1
                                });
                            },
                        });
                    });
                }
                //添加
                ,add: function(){
                    var param = dtree.getNowParam(majorTree);
                    if(param==null || !param.leaf){
                        layer.msg('请先选择左侧的课程分类', {
                            icon: 2
                        });
                        return false;
                    }
                    layer.open({
                        type: 2
                        ,title: '添加'
                        ,content: 'SocietySchoolCourseAdd.html'
                        ,maxmin: true
                        ,area: ['650px', '500px']
                        ,btn: ['确定', '取消']
                        ,success:function(layero,index){
                            var s = layero.find('iframe');
                            $("id",s[0].contentWindow.document).val(param.nodeId);
                            //给iframe元素赋值
                            var othis = layero.find('iframe').contents().find("#SocietySchoolCourse-form").click();
                            othis.find('input[name="courseClsId"]').val(param.nodeId);
                        }
                        ,yes: function(index, layero){
                            //点击确认触发 iframe 内容中的按钮提交
                            var submit = layero.find('iframe').contents().find("#SocietySchoolCourse-form-submit");
                            submit.click();
                        }
                    });
                }
            }
            //绑定点击事件
            $('.layui-btn.layuiadmin-btn-comm.layui-btn-sm').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });


        });

</script>
</body>
</html>

