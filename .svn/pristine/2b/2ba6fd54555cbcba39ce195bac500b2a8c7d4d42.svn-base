<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edgedo.society.mapper.SocietyStudentAndCourseMapper" >
   
   
    <resultMap id="BaseResultMap" type="com.edgedo.society.entity.SocietyStudentAndCourse" >
			<id column="ID" property="id"/>
			<result column="OWNER_SCHOOL_ID" property="ownerSchoolId"/>
			<result column="OWNER_MAJOR_ID" property="ownerMajorId"/>
			<result column="OWNER_MAJOR_NAME" property="ownerMajorName"/>
			<result column="CLASS_ID" property="classId"/>
			<result column="CLASS_NAME" property="className"/>
			<result column="STUDENT_ID" property="studentId"/>
			<result column="STUDENT_NAME" property="studentName"/>
			<result column="STUDENT_ID_CARD_NUM" property="studentIdCardNum"/>
			<result column="COURSE_ID" property="courseId"/>
			<result column="COURSE_NAME" property="courseName"/>
			<result column="COURSE_IMAGE" property="courseImage"/>
			<result column="COURSE_PROGRESS" property="courseProgress"/>
			<result column="LAST_LEARN_NODE_ID" property="lastLearnNodeId"/>
			<result column="LEARN_IS_FINISHED" property="learnIsFinished"/>
			<result column="FINISH_NODE_NUM" property="finishNodeNum"/>
			<result column="TOTAL_LESSONS" property="totalLessons"/>
			<result column="LEARN_FINISH_TIME" property="learnFinishTime"/>
			<result column="DATA_STATE" property="dataState"/>
			<result column="COURSE_ORG_PRICE" property="courseOrgPrice"/>
			<result column="COURSE_PRICE" property="coursePrice"/>
			<result column="PAY_STATE" property="payState"/>
			<result column="PAY_TIME" property="payTime"/>
			<result column="CREATE_TIME" property="createTime"/>
			<result column="OWNER_CLASS_AND_STUDENT_ID" property="ownerClassAndStudentId"/>
			<result column="COURSE_STUDY_NUM" property="courseStudyNum"/>
			<result column="COURSE_IS_NEED_FACE_CONTRAST" property="courseIsNeedFaceContrast"/>
    </resultMap>
   
    <resultMap id="BaseResultViewMap" type="com.edgedo.society.queryvo.SocietyStudentAndCourseView" extends="BaseResultMap">
    
    </resultMap>
  
  
  <!-- ******* 新增字段请修改这里  ******  -->
  <sql id="Base_Column_List">
	 ID, OWNER_SCHOOL_ID,OWNER_MAJOR_ID,OWNER_MAJOR_NAME, CLASS_ID, CLASS_NAME,STUDENT_ID, STUDENT_NAME,
	 STUDENT_ID_CARD_NUM, COURSE_ID, COURSE_NAME, COURSE_IMAGE, COURSE_PROGRESS,
	 LAST_LEARN_NODE_ID, LEARN_IS_FINISHED,FINISH_NODE_NUM,TOTAL_LESSONS,LEARN_FINISH_TIME,DATA_STATE,
	 COURSE_ORG_PRICE,COURSE_PRICE,PAY_STATE,PAY_TIME,PREPAY_ID,FEE,REAL_GET_MONEY ,OWNER_MAJOR_ID ,
	 OWNER_MAJOR_NAME ,CLASS_NAME,CREATE_TIME,OWNER_CLASS_AND_STUDENT_ID,COURSE_STUDY_NUM,COURSE_IS_NEED_FACE_CONTRAST
  </sql>
  
  <!-- ******* 利用好这里的动态查询条件  ******  -->
  <sql id="where">
  	<where>
		DATA_STATE='1'
		<if test='queryObj != null and  queryObj.ownerMajorName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerMajorName)'>
			AND  OWNER_MAJOR_NAME like concat('%',#{queryObj.ownerMajorName},'%')
		</if>
		<if test='queryObj != null and  queryObj.className != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.className)'>
			AND  CLASS_NAME like concat('%',#{queryObj.className},'%')
		</if>
		<if test='queryObj != null and  queryObj.courseName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.courseName)'>
			AND  COURSE_NAME like concat('%',#{queryObj.courseName},'%')
		</if>
		<if test='queryObj != null and  queryObj.id != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.id)'>
		AND  ID = #{queryObj.id}
		</if>
		<if test='queryObj != null and  queryObj.ownerSchoolId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerSchoolId)'>
		AND  OWNER_SCHOOL_ID = #{queryObj.ownerSchoolId}
		</if>
		<if test="queryObj != null and  queryObj.classId != null and queryObj.classId != ''">
		AND  CLASS_ID = #{queryObj.classId}
		</if>
		<if test="queryObj != null and  queryObj.studentId != null and  queryObj.studentId != '' ">
		AND  STUDENT_ID = #{queryObj.studentId}
		</if>
		<if test="queryObj != null and  queryObj.studentName != null and queryObj.studentName != ''">
		AND  STUDENT_NAME like concat('%',#{queryObj.studentName},'%')
		</if>
		<if test="queryObj != null and  queryObj.studentIdCardNum != null and queryObj.studentIdCardNum != ''">
		AND  STUDENT_ID_CARD_NUM like concat('%',#{queryObj.studentIdCardNum},'%')
		</if>
		<if test='queryObj != null and  queryObj.courseId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.courseId)'>
		AND  COURSE_ID = #{queryObj.courseId}
		</if>
		<if test='queryObj != null and  queryObj.courseImage != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.courseImage)'>
		AND  COURSE_IMAGE = #{queryObj.courseImage}
		</if>
		<if test='queryObj != null and  queryObj.lastLearnNodeId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.lastLearnNodeId)'>
		AND  LAST_LEARN_NODE_ID = #{queryObj.lastLearnNodeId}
		</if>
		<if test='queryObj != null and  queryObj.learnIsFinished != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.learnIsFinished)'>
		AND  LEARN_IS_FINISHED = #{queryObj.learnIsFinished}
		</if>
		<if test='queryObj != null and  queryObj.courseProgressStart != null and  queryObj.courseProgressEnd != null '>
			AND  COURSE_PROGRESS >= #{queryObj.courseProgressStart}
			AND  COURSE_PROGRESS &lt;= #{queryObj.courseProgressEnd}
		</if>

  	</where>
  	
  </sql>

	<sql id="where1">
		<where>
			DATA_STATE='1'
			<if test='queryObj != null and  queryObj.ownerSchoolId != null and queryObj.ownerSchoolId != ""'>
				AND  OWNER_SCHOOL_ID = #{queryObj.ownerSchoolId}
			</if>
			<if test='queryObj != null and  queryObj.studentId != null and queryObj.studentId != ""'>
				AND  STUDENT_ID = #{queryObj.studentId}
			</if>
			<if test='queryObj != null and  queryObj.classId != null and queryObj.classId != ""'>
				AND  CLASS_ID = #{queryObj.classId}
			</if>
			<if test='queryObj != null and  queryObj.courseName != null and queryObj.courseName != ""'>
				AND  COURSE_NAME like concat('%',#{queryObj.courseName},'%')
			</if>
			<if test="queryObj != null and  queryObj.ownerMajorName != null and queryObj.ownerMajorName != ''">
				AND  OWNER_MAJOR_NAME like concat('%',#{queryObj.ownerMajorName},'%')
			</if>
			<if test="queryObj != null and  queryObj.className != null and queryObj.className != ''">
				AND  CLASS_NAME like concat('%',#{queryObj.className},'%')
			</if>
			<if test='queryObj != null and  queryObj.courseProgressStart != null and  queryObj.courseProgressEnd != null '>
				AND  COURSE_PROGRESS >= #{queryObj.courseProgressStart}
				AND  COURSE_PROGRESS &lt;= #{queryObj.courseProgressEnd}
			</if>
			<if test="queryObj != null and  queryObj.studentName != null and queryObj.studentName != ''">
				AND  STUDENT_NAME like concat('%',#{queryObj.studentName},'%')
			</if>
			<if test="queryObj != null and  queryObj.studentIdCardNum != null and queryObj.studentIdCardNum != ''">
				AND  STUDENT_ID_CARD_NUM like concat('%',#{queryObj.studentIdCardNum},'%')
			</if>
		</where>
	</sql>


  <!-- ******* 排序判断  ******  
  <sql id="orderBy">
  	<if test="orderBy != null and orderBy!= '' ">
  		order by  ${orderBy}
  	</if>
  </sql>-->
  
  
  <!-- 分页条件查询  -->
  <select id="listPage" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_student_and_course
		  <include refid="where"/>
		  <if test='isRealNameAuth != null and isRealNameAuth!="" '>
			  AND  STUDENT_ID in (
			  select ID FROM society_student
			  WHERE DATA_STATE='1' and OWNER_SCHOOL_ID=#{queryObj.ownerSchoolId}
			  and IS_REAL_NAME_AUTH=#{isRealNameAuth}
			  )
		  </if>
  </select>


	<select id="selectByCourseStudyNum" parameterType="string" resultType="integer">
		select count(1) from society_student_and_course
		where DATA_STATE='1' and COURSE_ID = #{courseId} and COURSE_PROGRESS = 100 and LEARN_IS_FINISHED='1'
	</select>

	<select id="forclassadminlistPage" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_and_course
		<include refid="where1"/>
		<if test='classIdList != null and classIdList.size() > 0'>
			AND  CLASS_ID in
			<foreach item="id" index="index" collection="classIdList" close=")" open="(" separator=",">
				'${id}'
			</foreach>
		</if>
	</select>

	<select id="selectBySchoolAndClasslistPage" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_and_course
		<include refid="where"/>
		AND  STUDENT_ID in (
		select ID FROM society_student
		WHERE DATA_STATE='1'
		<if test='queryObj.schoolName != null and queryObj.schoolName!="" '>
			and OWNER_SCHOOL_NAME like concat('%',#{queryObj.schoolName},'%')
		</if>
		<if test='isRealNameAuth != null and isRealNameAuth!="" '>
			and IS_REAL_NAME_AUTH=#{isRealNameAuth}
		</if>
		)
	</select>

	<select id="selectBySchoolNamelistPage" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_and_course
		<include refid="where1"/>
	</select>
  
   <!-- 不分页条件查询  -->
  <select id="listByObj" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_student_and_course 
  		<include refid="where"/>
		  <if test='isRealNameAuth != null and isRealNameAuth!="" '>
			  AND  STUDENT_ID in (
			  select ID FROM society_student WHERE DATA_STATE='1'
			  and IS_REAL_NAME_AUTH=#{isRealNameAuth}
			  and OWNER_SCHOOL_ID=#{queryObj.ownerSchoolId}
			  )
		  </if>
  		 order by COURSE_PROGRESS asc
  </select>

	<select id="listByExcObjClassAdmin" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_and_course
		<include refid="where1"/>
		<if test='classIdList != null and classIdList.size() > 0'>
			AND  CLASS_ID in
			<foreach item="id" index="index" collection="classIdList" close=")" open="(" separator=",">
				'${id}'
			</foreach>
		</if>
		order by COURSE_PROGRESS asc
	</select>

	<select id="listByExcRenSheObj" parameterType="com.edgedo.society.queryvo.SocietyStudentAndCourseQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_and_course
		<include refid="where"/>
		AND  STUDENT_ID in (
		select ID FROM society_student
		WHERE DATA_STATE='1'
		<if test='queryObj.schoolName != null and queryObj.schoolName!="" '>
			and OWNER_SCHOOL_NAME like concat('%',#{queryObj.schoolName},'%')
		</if>
		<if test='isRealNameAuth != null and isRealNameAuth!="" '>
			and IS_REAL_NAME_AUTH=#{isRealNameAuth}
		</if>
		) order by COURSE_PROGRESS asc
	</select>


	<select id="selectByOwnerStudentAndNodeId" parameterType="java.lang.String" resultType="java.lang.String">
		select COURSE_ID from society_student_and_course
		where ID
		in (select OWNER_STUDENT_AND_COURSE_ID from society_student_and_node where ID=#{ownerStudentAndNodeId})
	</select>

	<!--批量插入关联-->
	<insert id="insertCourseAndStudent" parameterType="java.util.List">
		insert into society_student_and_course (
			ID, OWNER_SCHOOL_ID, CLASS_ID, STUDENT_ID, STUDENT_NAME,
			 STUDENT_ID_CARD_NUM, COURSE_ID, COURSE_NAME, COURSE_IMAGE, COURSE_PROGRESS,
			 LAST_LEARN_NODE_ID, LEARN_IS_FINISHED,FINISH_NODE_NUM,DATA_STATE,COURSE_ORG_PRICE,COURSE_PRICE,PAY_STATE)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(
			#{item.id},#{item.ownerSchoolId},#{item.classId},#{item.studentId},#{item.studentName},
			#{item.studentIdCardNum},#{item.courseId},#{item.courseName},#{item.courseImage},#{item.courseProgress},
			#{item.lastLearnNodeId},#{item.learnIsFinished},#{item.finishNodeNum},#{item.dataState},#{item.courseOrgPrice},
			#{item.coursePrice},#{item.payState}
			)
		</foreach>

	</insert>

	<!--统计课程的培训人-->
	<select id="countByCourseId" parameterType="string" resultType="int">
		select count(1) from  society_student_and_course
		where COURSE_ID = #{courseId}
	</select>

	<!--统计学员是否关联该班级课程-->
	<select id="countByMap" parameterType="map" resultType="int">
		select count(1) from  society_student_and_course
		where DATA_STATE = '1' and COURSE_ID = #{courseId}
		and STUDENT_ID_CARD_NUM=#{idCard}
	</select>
	<!--逻辑删除学员在该班级的课程-->
	<update id="updateStuAndCourse" parameterType="map" >
		update society_student_and_course set DATA_STATE = '0'
		where DATA_STATE = '1' and CLASS_ID = #{classId} and STUDENT_ID = #{studentId}
	</update>

	<!--	//删除该该班级所有学生和课程的关联-->
	<update id="updateByClassIdAndCourseId" >
		update society_student_and_course set DATA_STATE = '0'
		where DATA_STATE = '1' and CLASS_ID = #{classId}
		and COURSE_ID in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<!--统计课程的培训人数-->
	<select id="countTotalStuNum" parameterType="string" resultType="int">
		select count(1) from  society_student_and_course
		where DATA_STATE = '1' and COURSE_ID = #{courseId}
	</select>

	<!-- 根据学员和课程查询一条关联 -->
	<select id="selectVoByStudentAndCourse" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_and_course
		where DATA_STATE='1'
		and STUDENT_ID=#{studentId}
		and COURSE_ID=#{courseId}
		and (LEARN_IS_FINISHED='0' or LEARN_IS_FINISHED is null)
		order by COURSE_PROGRESS asc limit 1
	</select>


	<!--根据班级id和学员id查询学员关联的课程-->
	<select id="listByClassIdAndStuId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from  society_student_and_course
		where DATA_STATE = '1' and CLASS_ID = #{classId} and STUDENT_ID = #{studentId}
	</select>
	<!--/*根据学校id和课程id，统计完成课程的人数*/-->
	<select id="countFinishedCourseStuNum" parameterType="string" resultType="int">
		select count(1) from  society_student_and_course
		where DATA_STATE = '1'
		and COURSE_ID=#{courseId}
		and LEARN_IS_FINISHED = '1'
	</select>

	<update id="updateVoClassIdAndCourseId" parameterType="string">
		update society_student_and_course set CLASS_NAME=#{className},OWNER_MAJOR_ID=#{ownMajorId},OWNER_MAJOR_NAME=#{ownMajorName}
		where DATA_STATE = '1' and CLASS_ID=#{classId} and COURSE_ID=#{courseId}
	</update>

	<select id="selectStuAndClassId" parameterType="string" resultType="string">
		select ID id from  society_student_and_course
		where DATA_STATE = '1'
		and CLASS_ID=#{classId} and STUDENT_ID = #{studentId}
	</select>

	<select id="selectByStudentIdAndClassId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from  society_student_and_course
		where DATA_STATE = '1' and CLASS_ID = #{classId} and STUDENT_ID = #{studentId} and OWNER_SCHOOL_ID = #{schoolId}
	</select>


	<select id="countFinishedClassStuNum" parameterType="string" resultType="int">
		select count(1) from  society_student_and_course
		where DATA_STATE = '1' and CLASS_ID = #{classId} and OWNER_SCHOOL_ID = #{schoolId}
		and COURSE_PROGRESS=100
	</select>

	<select id="selectByAllId" parameterType="map" resultType="string">
		select ID id from  society_student_and_course
		where DATA_STATE = '1' and CLASS_ID = #{classId} and STUDENT_ID = #{studentId}
	</select>

	<delete id="deleteByStuId" parameterType="string">
		delete from society_student_and_course where STUDENT_ID=#{id}
	</delete>


	<update id="updateByStuId" parameterType="map">
		update society_student_and_course set STUDENT_NAME=#{stuName},STUDENT_ID_CARD_NUM=#{idcard}
		where STUDENT_ID=#{stuId}
	</update>


	<select id="countCourseStuNum" parameterType="string" resultType="int">
		select COUNT(DISTINCT STUDENT_ID_CARD_NUM,COURSE_ID) from society_student_and_course
		WHERE DATA_STATE='1' and COURSE_PROGRESS>0 and OWNER_SCHOOL_ID = #{schoolId}
	</select>

	<select id="countIsNotCertifi" resultMap="BaseResultViewMap">
		select * from society_student_and_course where DATA_STATE='1' and COURSE_PROGRESS=100 AND LEARN_IS_FINISHED='1'
		AND STUDENT_ID not in (
			select STUDENT_ID from society_student_certificate where DATA_STATE='1'
		)
	</select>

	<select id="selectByStuIdAndSchoolId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from  society_student_and_course
		where DATA_STATE = '1' and STUDENT_ID = #{studentId} and OWNER_SCHOOL_ID = #{schoolId}
	</select>

	<update id="updateByClassAndStudentId" parameterType="map">
		update society_student_and_course set OWNER_CLASS_AND_STUDENT_ID=#{classAndStudentId}
		where DATA_STATE='1' and STUDENT_ID=#{studentId} and CLASS_ID=#{classId} and OWNER_SCHOOL_ID=#{schoolId}
	</update>

	<update id="updateOnceId" parameterType="com.edgedo.society.entity.SocietyStudentAndCourse">
		update society_student_and_course
		set OWNER_CLASS_AND_STUDENT_ID=#{ownerClassAndStudentId},CREATE_TIME=#{createTime}
		where DATA_STATE='1' and ID=#{id}
	</update>

	<update id="updateByMajorId" parameterType="string">
		update society_student_and_course set OWNER_MAJOR_NAME=#{majorName}
		where DATA_STATE='1'
		and OWNER_MAJOR_ID=#{majorId}
	</update>


	<update id="updateByCourseId" >
		update society_student_and_course
		<set>
			<if test='courseStudyNum != null and courseStudyNum != 0'>
				COURSE_STUDY_NUM=#{courseStudyNum},
			</if>
			<if test='courseIsNeedFaceContrast != null and courseIsNeedFaceContrast != ""'>
				COURSE_IS_NEED_FACE_CONTRAST=#{courseIsNeedFaceContrast},
			</if>
		</set>
		where DATA_STATE='1' and COURSE_ID=#{courseId} and OWNER_SCHOOL_ID=#{ownerSchoolId}
	</update>

	<select id="selectSchAndClaAndCouAndStu" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from  society_student_and_course
		where DATA_STATE = '1'
		and STUDENT_ID = #{studentId} and OWNER_SCHOOL_ID = #{schoolId}
		and COURSE_ID=#{courseId} and CLASS_ID=#{classId}
	</select>

	<select id="selectByCourseIdAndSchoolId" parameterType="string" resultType="integer">
		select count(1) from society_student_and_course
		where DATA_STATE='1' and COURSE_ID = #{ownerCourseId} and COURSE_PROGRESS=100 AND LEARN_IS_FINISHED='1'
		and OWNER_SCHOOL_ID = #{schoolId}
	</select>

	<select id="selectByUseCourseIdAndSchoolId" parameterType="string" resultType="integer">
		select count(1) from society_student_and_course
		where DATA_STATE='1' and COURSE_ID = #{ownerCourseId} and COURSE_PROGRESS!=0
		and OWNER_SCHOOL_ID = #{schoolId}
	</select>

	<select id="selectNodeTime" parameterType="com.edgedo.society.queryvo.SocietySchoolView" resultType="integer">
		select count(1) from society_student_and_course
		where DATA_STATE='1' and COURSE_ID = #{ownerCourseId} and COURSE_PROGRESS=100 AND LEARN_IS_FINISHED='1'
		and OWNER_SCHOOL_ID = #{id}
		<if test="monthDayStart != null and monthDayEnd != null">
			and (date(LEARN_FINISH_TIME) between #{monthDayStart} and #{monthDayEnd})
		</if>
	</select>


	<update id="updateFinishTime" parameterType="string" >
		update society_student_and_course
		set LEARN_FINISH_TIME=null
		where DATA_STATE='1' and ID=#{stuCourseId}
	</update>

	<update id="updateByCourseIdAndCourseName" parameterType="map">
		update society_student_and_course
		set COURSE_NAME=#{courseName}
		where DATA_STATE='1' and COURSE_ID=#{courseId}
	</update>


</mapper>