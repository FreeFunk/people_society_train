<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edgedo.society.mapper.SocietySchoolClassAndCourseMapper" >
   
   
    <resultMap id="BaseResultMap" type="com.edgedo.society.entity.SocietySchoolClassAndCourse" >
			<result column="ID" property="id"/>
			<result column="OWNER_SCHOOL_ID" property="ownerSchoolId"/>
			<result column="CLASS_ID" property="classId"/>
			<result column="COURSE_ID" property="courseId"/>
			<result column="TOTAL_STUDENT_NUM" property="totalStudentNum"/>
			<result column="FINISHED_STUDENT_NUM" property="finishedStudentNum"/>
			<result column="NOT_FINISHED_STUDENT_NUM" property="notFinishedStudentNum"/>
			<result column="DATA_STATE" property="dataState"/>
			<result column="CREATE_TIME" property="createTime"/>
    </resultMap>
   
    <resultMap id="BaseResultViewMap" type="com.edgedo.society.queryvo.SocietySchoolClassAndCourseView" extends="BaseResultMap">
    
    </resultMap>
  
  
  <!-- ******* 新增字段请修改这里  ******  -->
  <sql id="Base_Column_List">
	 OWNER_SCHOOL_ID, CLASS_ID, COURSE_ID, TOTAL_STUDENT_NUM, FINISHED_STUDENT_NUM, NOT_FINISHED_STUDENT_NUM,ID,CREATE_TIME
  </sql>
  
  <!-- ******* 利用好这里的动态查询条件  ******  -->
  <sql id="where">
  	<where>
		<if test='queryObj != null and  queryObj.ownerSchoolId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerSchoolId)'>
		AND  OWNER_SCHOOL_ID = #{queryObj.ownerSchoolId}
		</if>
		<if test='queryObj != null and  queryObj.classId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.classId)'>
		AND  CLASS_ID = #{queryObj.classId}
		</if>
		<if test='queryObj != null and  queryObj.courseId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.courseId)'>
		AND  COURSE_ID = #{queryObj.courseId}
		</if>
		<if test='queryObj != null and  queryObj.totalStudentNum != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.totalStudentNum)'>
			AND  TOTAL_STUDENT_NUM = #{queryObj.totalStudentNum}
		</if>
		<if test='queryObj != null and  queryObj.finishedStudentNum != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.finishedStudentNum)'>
			AND  FINISHED_STUDENT_NUM = #{queryObj.finishedStudentNum}
		</if>
		<if test='queryObj != null and  queryObj.notFinishedStudentNum != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.notFinishedStudentNum)'>
			AND  NOT_FINISHED_STUDENT_NUM = #{queryObj.notFinishedStudentNum}
		</if>
  	</where>
  	
  </sql>
  
  <!-- ******* 排序判断  ******  
  <sql id="orderBy">
  	<if test="orderBy != null and orderBy!= '' ">
  		order by  ${orderBy}
  	</if>
  </sql>-->
  
  
  <!-- 分页条件查询  -->
  <select id="listPage" parameterType="com.edgedo.society.queryvo.SocietySchoolClassAndCourseQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_school_class_and_course 
  		<include refid="where"/>
  </select>
  
   <!-- 不分页条件查询  -->
  <select id="listByObj" parameterType="com.edgedo.society.queryvo.SocietySchoolClassAndCourseQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_school_class_and_course 
  		<include refid="where"/>
  </select>

	<select id="selectCourseIdByClass" parameterType="string" resultType="string">
		select COURSE_ID from society_school_class_and_course
		where CLASS_ID=#{classId} and DATA_STATE = '1'
	</select>

	<select id="selectCourseIdByClassNotId" resultType="string">
		select COURSE_ID from society_school_class_and_course
		where CLASS_ID=#{classId} and DATA_STATE = '1'
		and COURSE_ID not in
		<foreach item="courseId" index="index" collection="courseId" separator="," open="(" close=")">
			'${courseId}'
		</foreach>
	</select>

	<select id="selectCourseIdByClassYesId" resultType="string">
		select COURSE_ID from society_school_class_and_course
		where CLASS_ID=#{classId} and DATA_STATE = '1'
		and COURSE_ID in
		<foreach item="courseId" index="index" collection="courseId" separator="," open="(" close=")">
			'${courseId}'
		</foreach>
	</select>


	<select id="SumLesson" parameterType="string" resultType="int">
		select  COALESCE(sum(TOTAL_LESSONS),0)  from society_school_class_and_course
		where CLASS_ID=#{classId}
	</select>


	<select id="SumCourseTimeLength" parameterType="string" resultType="int">
		select  COALESCE(sum(COURSE_TIME_LENGTH),0)  from society_school_class_and_course
		where CLASS_ID=#{classId}
	</select>


	<delete id="deteleToClassIdAndSchoolIdAndId" >
		delete from society_school_class_and_course
		where OWNER_SCHOOL_ID = #{ownerSchoolId} and CLASS_ID = #{classId}
		and COURSE_ID in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="updateToClassIdAndSchoolIdAndId" >
		update society_school_class_and_course set DATA_STATE = '0'
		where DATA_STATE = '1' and OWNER_SCHOOL_ID = #{ownerSchoolId} and CLASS_ID = #{classId}
		and COURSE_ID in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>

	<select id="selectByClassId" parameterType="string" resultType="string">
		select  COURSE_ID courseId  from society_school_class_and_course
		where CLASS_ID=#{classId} and DATA_STATE = '1'
	</select>


	<select id="selectClassByOne" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_school_class_and_course
		where CLASS_ID=#{id} and DATA_STATE = '1'
	</select>

	<delete id="deleteByIdOne" parameterType="string">
		delete from society_school_class_and_course where id=#{id} and DATA_STATE = '1'
	</delete>

	<update id="logicDelete" parameterType="string">
		update society_school_class_and_course set DATA_STATE='0'
		where DATA_STATE='1'
		and CLASS_ID in
		<foreach item="id" index="index" collection="list" close=")" open="(" separator=",">
			#{id}
		</foreach>
	</update>

</mapper>