<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edgedo.society.mapper.SocietyStudentMapper" >
   
   
    <resultMap id="BaseResultMap" type="com.edgedo.society.entity.SocietyStudent" >
			<id column="ID" property="id"/>
			<result column="CREATE_TIME" property="createTime"/>
			<result column="CREATE_USER_ID" property="createUserId"/>
			<result column="CREATE_USER_NAME" property="createUserName"/>
			<result column="PROVINCE_ID" property="provinceId"/>
			<result column="PROVINCE_NAME" property="provinceName"/>
			<result column="CITY_ID" property="cityId"/>
			<result column="CITY_NAME" property="cityName"/>
			<result column="XIANQU_ID" property="xianquId"/>
			<result column="XIANQU_NAME" property="xianquName"/>
			<result column="OWNER_SCHOOL_ID" property="ownerSchoolId"/>
			<result column="OWNER_SCHOOL_NAME" property="ownerSchoolName"/>
			<result column="STUDENT_NAME" property="studentName"/>
			<result column="STUDENT_SEX" property="studentSex"/>
			<result column="STUDENT_AGE" property="studentAge"/>
			<result column="STUDENT_PHONE_NUM" property="studentPhoneNum"/>
			<result column="STUDENT_ID_CARD_NUM" property="studentIdCardNum"/>
			<result column="IS_REAL_NAME_AUTH" property="isRealNameAuth"/>
			<result column="DATA_STATE" property="dataState"/>
			<result column="PASSWORD" property="password"/>
			<result column="WX_OPEN_ID" property="wxOpenId"/>
			<result column="PEOPLE_TYPE" property="peopleType"/>
			<result column="REAL_NAME_TYPE" property="realNameType"/>
			<result column="REAL_NAME_TIME" property="realNameTime"/>
			<result column="REAL_NAME_OPER_NAME" property="realNameOperName"/>
			<result column="REAL_NAME_OPER_ID" property="realNameOperId"/>
			<result column="FACE_IMAGE_URL" property="faceImageUrl"/>
			<result column="ABC_OPEN_ID" property="abcOpenId"/>
			<result column="ACCESS_TOKEN" property="accessToken"/>
			<result column="ID_CARD_IMAGE" property="idCardImage"/>
			<result column="STUDENT_ID_CARD_ASCII" property="studentIdCardAscii"/>
    </resultMap>
   
    <resultMap id="BaseResultViewMap" type="com.edgedo.society.queryvo.SocietyStudentView" extends="BaseResultMap">
    
    </resultMap>
  
  
  <!-- ******* 新增字段请修改这里  ******  -->
  <sql id="Base_Column_List">
	 ID, CREATE_TIME, CREATE_USER_ID, CREATE_USER_NAME, PROVINCE_ID,
	 PROVINCE_NAME, CITY_ID, CITY_NAME, XIANQU_ID, XIANQU_NAME, OWNER_SCHOOL_ID,
	 OWNER_SCHOOL_NAME, STUDENT_NAME, STUDENT_SEX, STUDENT_AGE, STUDENT_PHONE_NUM,
	 STUDENT_ID_CARD_NUM, IS_REAL_NAME_AUTH, DATA_STATE,WX_OPEN_ID,PEOPLE_TYPE,REAL_NAME_TYPE,
	 REAL_NAME_TIME,REAL_NAME_OPER_NAME,REAL_NAME_OPER_ID,FACE_IMAGE_URL,ABC_OPEN_ID,ACCESS_TOKEN,ID_CARD_IMAGE
	 ,STUDENT_ID_CARD_ASCII
  </sql>
  
  <!-- ******* 利用好这里的动态查询条件  ******  -->
  <sql id="where">
  	<where>
		DATA_STATE='1'
		<if test='queryObj != null and  queryObj.id != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.id)'>
		AND  ID = #{queryObj.id}
		</if>
		<if test='queryObj != null and  queryObj.createTime != null'>
			AND  CREATE_TIME = #{queryObj.createTime}
		</if>
		<if test='queryObj != null and  queryObj.createUserId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.createUserId)'>
		AND  CREATE_USER_ID = #{queryObj.createUserId}
		</if>
		<if test='queryObj != null and  queryObj.createUserName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.createUserName)'>
		AND  CREATE_USER_NAME = #{queryObj.createUserName}
		</if>
		<if test='queryObj != null and  queryObj.provinceId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.provinceId)'>
		AND  PROVINCE_ID = #{queryObj.provinceId}
		</if>
		<if test='queryObj != null and  queryObj.provinceName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.provinceName)'>
		AND  PROVINCE_NAME = #{queryObj.provinceName}
		</if>
		<if test='queryObj != null and  queryObj.cityId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.cityId)'>
		AND  CITY_ID = #{queryObj.cityId}
		</if>
		<if test='queryObj != null and  queryObj.cityName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.cityName)'>
		AND  CITY_NAME = #{queryObj.cityName}
		</if>
		<if test='queryObj != null and  queryObj.xianquId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.xianquId)'>
		AND  XIANQU_ID = #{queryObj.xianquId}
		</if>
		<if test='queryObj != null and  queryObj.xianquName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.xianquName)'>
		AND  XIANQU_NAME = #{queryObj.xianquName}
		</if>
		<if test='queryObj != null and  queryObj.ownerSchoolId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerSchoolId)'>
		AND  OWNER_SCHOOL_ID = #{queryObj.ownerSchoolId}
		</if>
		<if test='queryObj != null and  queryObj.ownerSchoolName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerSchoolName)'>
		AND  OWNER_SCHOOL_NAME like concat('%',#{queryObj.ownerSchoolName},'%')
		</if>
		<if test='queryObj != null and  queryObj.studentName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.studentName)'>
		AND  STUDENT_NAME like concat('%',#{queryObj.studentName},'%')
		</if>
		<if test='queryObj != null and  queryObj.studentSex != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.studentSex)'>
		AND  STUDENT_SEX = #{queryObj.studentSex}
		</if>
		<if test='queryObj != null and  queryObj.studentAge != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.studentAge)'>
			AND  STUDENT_AGE = #{queryObj.studentAge}
		</if>
		<if test='queryObj != null and  queryObj.studentPhoneNum != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.studentPhoneNum)'>
		AND  STUDENT_PHONE_NUM like concat('%',#{queryObj.studentPhoneNum},'%')
		</if>
		<if test="queryObj != null and  queryObj.studentIdCardNum != null and  queryObj.studentIdCardNum != ''">
		AND  STUDENT_ID_CARD_NUM like concat('%',#{queryObj.studentIdCardNum},'%')
		</if>
		<if test='queryObj != null and  queryObj.isRealNameAuth != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.isRealNameAuth)'>
		AND  IS_REAL_NAME_AUTH = #{queryObj.isRealNameAuth}
		</if>
		<if test='queryObj != null and  queryObj.dataState != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.dataState)'>
		AND  DATA_STATE = #{queryObj.dataState}
		</if>
  	</where>
  	
  </sql>
  
  <!-- ******* 排序判断  ******  
  <sql id="orderBy">
  	<if test="orderBy != null and orderBy!= '' ">
  		order by  ${orderBy}
  	</if>
  </sql>-->
  
  
  <!-- 分页条件查询  -->
  <select id="listPage" parameterType="com.edgedo.society.queryvo.SocietyStudentQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_student 
  		<include refid="where"/>
  </select>

	<!-- 班级学员分页条件查询  -->
	<select id="classStudentListPage" parameterType="com.edgedo.society.queryvo.SocietyStudentQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		<include refid="where"/>
		<if test="studentIdList != null and  studentIdList.size() > 0">
			and ID in
			<foreach item="id" index="index" collection="studentIdList" separator="," open="(" close=")">
				'${id}'
			</foreach>
		</if>
	</select>

	<!-- 非班级学员分页条件查询  -->
	<select id="classNotInStudentListPage" parameterType="com.edgedo.society.queryvo.SocietyStudentQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		<include refid="where"/>
		<if test="studentIdList != null and  studentIdList.size() > 0">
			and ID not in
			<foreach item="id" index="index" collection="studentIdList" separator="," open="(" close=")">
				'${id}'
			</foreach>
		</if>
	</select>

	<select id="classYesInStudentListPage" parameterType="com.edgedo.society.queryvo.SocietyStudentQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		<include refid="where"/>
		<if test="studentIdList != null and  studentIdList.size() > 0">
			and ID in
			<foreach item="id" index="index" collection="studentIdList" separator="," open="(" close=")">
				'${id}'
			</foreach>
		</if>
	</select>
  
   <!-- 不分页条件查询  -->
  <select id="listByObj" parameterType="com.edgedo.society.queryvo.SocietyStudentQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_student 
  		<include refid="where"/>
  </select>

	<update id="logicDelete" parameterType="string">
		update society_student set DATA_STATE='0'
		where DATA_STATE='1'
		and ID in
		<foreach item="id" index="index" collection="list" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<!-- 根据身份证号查询学员信息 -->
	<select id="selectVoByIdCardNum" parameterType="map" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		where DATA_STATE='1'
		and STUDENT_ID_CARD_NUM=#{idCardNum} and OWNER_SCHOOL_ID = #{schoolId}
	</select>

	<!-- 根据手机号查询学员信息 -->
	<select id="selectVoByPhoneNum" parameterType="map" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		where DATA_STATE='1'
		and STUDENT_PHONE_NUM=#{phoneNum} and OWNER_SCHOOL_ID = #{schoolId}
	</select>

	<!-- 统计数量 -->
	<select id="count" parameterType="com.edgedo.society.queryvo.SocietyStudentQuery" resultType="Integer">
		select count(1) count from society_student
		<include refid="where"/>
	</select>

<!--	学员统计-->
	<select id="countStudentAllNum" resultType="Integer">
		select count(1) count from society_student where DATA_STATE='1'
	</select>

	<select id="countXianQuStudentAllNum" parameterType="string" resultType="Integer">
		select count(1) count from society_student where DATA_STATE='1' and XIANQU_ID=#{xianquId}
	</select>

	<!--同一学校手机号和身份证号不重复不能导入-->
	<select id="countByPhoneNumOrIdCardNum" parameterType="map" resultType="int">
		select count(1) count from society_student where DATA_STATE='1'
		and OWNER_SCHOOL_ID = #{schoolId} and (STUDENT_PHONE_NUM = #{phoneNum} OR STUDENT_ID_CARD_NUM = #{idCardNum})
	</select>

	<select id="selectAllStudent" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		where DATA_STATE='1'
		and AND  OWNER_SCHOOL_ID = #{ownerSchoolId}
	</select>

	<select id="selectAllList" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		where DATA_STATE='1'
	</select>

	<!--同一学校手机号和身份证号不重复不能导入-->
	<select id="selectVoPhoneAndCard" parameterType="map" resultType="int">
		select count(1) from society_student where DATA_STATE='1'
		and OWNER_SCHOOL_ID = #{schoolId} and STUDENT_PHONE_NUM = #{phoneNum} and STUDENT_ID_CARD_NUM = #{idCardNum}
	</select>

	<select id="selectByPhoneAndIdCard" parameterType="string" resultType="string">
		select ID id from society_student where DATA_STATE='1'
		and OWNER_SCHOOL_ID = #{compId} and STUDENT_PHONE_NUM = #{studentPhoneNum} AND STUDENT_ID_CARD_NUM = #{studentIdCardNum}
	</select>

	<!-- 根据学员手机号查询学员信息 -->
	<select id="selectOneByPhoneNumAndSchool" parameterType="map" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		where DATA_STATE='1'
		and STUDENT_PHONE_NUM=#{studentPhoneNum}
		and OWNER_SCHOOL_ID=#{ownerSchoolId}
		order by CREATE_TIME desc limit 1
	</select>

<!--	根据手机号  身份证号  查出表中多个学校的同一个学生-->
	<select id="selectByPhoneAndIdCardAll" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student
		where DATA_STATE='1'
		and STUDENT_PHONE_NUM=#{studentPhoneNum}
		and STUDENT_ID_CARD_NUM=#{studentIdCardNum}
	</select>


	<delete id="deleteByStuId" parameterType="string">
		delete from society_student where ID=#{id} and DATA_STATE='1'
	</delete>


	<update id="updateByStuId" parameterType="map">
		update society_student set STUDENT_NAME=#{stuName},STUDENT_ID_CARD_NUM=#{idcard},STUDENT_PHONE_NUM=#{phone}
		where ID=#{stuId}
	</update>


	<select id="selectByOrdAndCourseId" parameterType="string" resultType="string">
		select ID from society_student
		where DATA_STATE='1'
		and ID in (
			select STUDENT_ID from society_student_and_course
			where DATA_STATE='1' and COURSE_ID=#{courseId} and OWNER_SCHOOL_ID=#{schoolId}
		)
		and PEOPLE_TYPE='ORD_STU'
	</select>

	<select id="selectByImpAndCourseId" parameterType="string" resultType="string">
		select ID from society_student
		where DATA_STATE='1'
		and ID in (
			select STUDENT_ID from society_student_and_course
			where DATA_STATE='1' and COURSE_ID=#{courseId} and OWNER_SCHOOL_ID=#{schoolId}
		)
		and PEOPLE_TYPE='IMP_STU'
	</select>

	<select id="selectByCompAndCourseId" parameterType="string" resultType="string">
		select ID from society_student
		where DATA_STATE='1'
		and ID in (
			select STUDENT_ID from society_student_and_course
			where DATA_STATE='1' and COURSE_ID=#{courseId} and OWNER_SCHOOL_ID=#{schoolId}
		)
		and PEOPLE_TYPE='COMP_STU'
	</select>


	<select id="selectByOrdNullAndCourseId" parameterType="string" resultType="string">
		select ID from society_student
		where DATA_STATE='1'
		and ID in (
			select STUDENT_ID from society_student_and_course
			where DATA_STATE='1' and COURSE_ID=#{courseId} and OWNER_SCHOOL_ID=#{schoolId} and CLASS_ID=#{classId}
		)
		and (PEOPLE_TYPE = '' or PEOPLE_TYPE is null)
	</select>

	<select id="findFaceImageByStudentId" parameterType="string" resultType="string">
		select FACE_IMAGE_URL from  society_student
		where ID = #{studentId} and  DATA_STATE='1'
	</select>


	<update id="updateByList" parameterType="java.util.List">
		<foreach collection="studentList" item="studentAnswer" index= "index" open="" close="" separator =";">
			update society_student
			<set>
				STUDENT_ID_CARD_ASCII=#{studentAnswer.studentIdCardAscii}
			</set>
			<where>
				ID=#{studentAnswer.id}
			</where>
		</foreach>
	</update>
</mapper>