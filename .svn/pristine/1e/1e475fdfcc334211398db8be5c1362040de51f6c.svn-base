<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edgedo.society.mapper.SocietyStudentPractiseQuestionMapper" >
   
   
    <resultMap id="BaseResultMap" type="com.edgedo.society.entity.SocietyStudentPractiseQuestion" >
			<id column="ID" property="id"/>
			<result column="OWNER_STUDENT_AND_NODE_ID" property="ownerStudentAndNodeId"/>
			<result column="OWNER_STU_COURSE_ID" property="ownerStuCourseId"/>
			<result column="CREATE_TIME" property="createTime"/>
			<result column="STUDENT_ID" property="studentId"/>
			<result column="STUDENT_NAME" property="studentName"/>
			<result column="STUDENT_ID_CARD_NUM" property="studentIdCardNum"/>
			<result column="OWNER_SCHOOL_ID" property="ownerSchoolId"/>
			<result column="OWNER_SCHOOL_NAME" property="ownerSchoolName"/>
			<result column="OWNER_COURSE_ID" property="ownerCourseId"/>
			<result column="OWNER_COURSE_NAME" property="ownerCourseName"/>
			<result column="OWNER_NODE_ID" property="ownerNodeId"/>
			<result column="OWNER_NODE_NAME" property="ownerNodeName"/>
			<result column="QUERSION_ID" property="quersionId"/>
			<result column="QUESTION_NAME" property="questionName"/>
			<result column="QUESTION_TYPE" property="questionType"/>
			<result column="QUESTION_SCORE" property="questionScore"/>
			<result column="QUESTION_ANALYSIS" property="questionAnalysis"/>
			<result column="GET_SCORE" property="getScore"/>
			<result column="ORDER_NUM" property="orderNum"/>
			<result column="DATA_STATE" property="dataState"/>
			<result column="STU_SELECT_OP_ID" property="stuSelectOpId"/>
			<result column="ANSWER_STATE" property="answerState"/>
			<result column="LAST_ANSWER_TIME" property="lastAnswerTime"/>
			<result column="PROVINCE_ID" property="provinceId"/>
			<result column="PROVINCE_NAME" property="provinceName"/>
			<result column="CITY_ID" property="cityId"/>
			<result column="CITY_NAME" property="cityName"/>
			<result column="XIANQU_ID" property="xianquId"/>
			<result column="XIANQU_NAME" property="xianquName"/>
    </resultMap>

    <resultMap id="BaseResultViewMap" type="com.edgedo.society.queryvo.SocietyStudentPractiseQuestionView" extends="BaseResultMap">

    </resultMap>


  <!-- ******* 新增字段请修改这里  ******  -->
  <sql id="Base_Column_List">
	 ID, OWNER_STUDENT_AND_NODE_ID, STUDENT_ID, STUDENT_ID_CARD_NUM,STUDENT_NAME,OWNER_STU_COURSE_ID,
	 OWNER_SCHOOL_ID, OWNER_SCHOOL_NAME, OWNER_COURSE_ID, OWNER_COURSE_NAME,
	 OWNER_NODE_ID, OWNER_NODE_NAME, QUERSION_ID, QUESTION_NAME, QUESTION_TYPE,
	 QUESTION_SCORE, QUESTION_ANALYSIS, GET_SCORE, ORDER_NUM, DATA_STATE,STU_SELECT_OP_ID,ANSWER_STATE,
	 PROVINCE_ID,PROVINCE_NAME, CITY_ID, CITY_NAME, XIANQU_ID, XIANQU_NAME,LAST_ANSWER_TIME,CREATE_TIME
  </sql>

  <!-- ******* 利用好这里的动态查询条件  ******  -->
  <sql id="where">
  	<where>
		<if test='queryObj != null and  queryObj.id != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.id)'>
		AND  ID = #{queryObj.id}
		</if>
		<if test='queryObj != null and  queryObj.ownerStudentAndNodeId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerStudentAndNodeId)'>
		AND  OWNER_STUDENT_AND_NODE_ID = #{queryObj.ownerStudentAndNodeId}
		</if>
		<if test='queryObj != null and  queryObj.studentId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.studentId)'>
		AND  STUDENT_ID = #{queryObj.studentId}
		</if>
		<if test='queryObj != null and  queryObj.studentIdCardNum != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.studentIdCardNum)'>
		AND  STUDENT_ID_CARD_NUM = #{queryObj.studentIdCardNum}
		</if>
		<if test='queryObj != null and  queryObj.ownerSchoolId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerSchoolId)'>
		AND  OWNER_SCHOOL_ID = #{queryObj.ownerSchoolId}
		</if>
		<if test='queryObj != null and  queryObj.ownerSchoolName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerSchoolName)'>
		AND  OWNER_SCHOOL_NAME = #{queryObj.ownerSchoolName}
		</if>
		<if test='queryObj != null and  queryObj.ownerCourseId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerCourseId)'>
		AND  OWNER_COURSE_ID = #{queryObj.ownerCourseId}
		</if>
		<if test='queryObj != null and  queryObj.ownerCourseName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerCourseName)'>
		AND  OWNER_COURSE_NAME = #{queryObj.ownerCourseName}
		</if>
		<if test='queryObj != null and  queryObj.ownerNodeId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerNodeId)'>
		AND  OWNER_NODE_ID = #{queryObj.ownerNodeId}
		</if>
		<if test='queryObj != null and  queryObj.ownerNodeName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.ownerNodeName)'>
		AND  OWNER_NODE_NAME = #{queryObj.ownerNodeName}
		</if>
		<if test='queryObj != null and  queryObj.quersionId != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.quersionId)'>
		AND  QUERSION_ID = #{queryObj.quersionId}
		</if>
		<if test='queryObj != null and  queryObj.questionName != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.questionName)'>
		AND  QUESTION_NAME = #{queryObj.questionName}
		</if>
		<if test='queryObj != null and  queryObj.questionType != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.questionType)'>
		AND  QUESTION_TYPE = #{queryObj.questionType}
		</if>
		<if test='queryObj != null and  queryObj.questionScore != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.questionScore)'>
			AND  QUESTION_SCORE = #{queryObj.questionScore}
		</if>
		<if test='queryObj != null and  queryObj.questionAnalysis != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.questionAnalysis)'>
		AND  QUESTION_ANALYSIS = #{queryObj.questionAnalysis}
		</if>
		<if test='queryObj != null and  queryObj.getScore != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.getScore)'>
			AND  GET_SCORE = #{queryObj.getScore}
		</if>
		<if test='queryObj != null and  queryObj.dataState != null and @org.apache.commons.lang3.StringUtils@isNotEmpty(queryObj.dataState)'>
		AND  DATA_STATE = #{queryObj.dataState}
		</if>
  	</where>

  </sql>


	<sql id="where1">
		<where>
			DATA_STATE = '1'
			<if test='queryObj != null and  queryObj.ownerNodeId != null and queryObj.ownerNodeId != ""'>
				AND  OWNER_NODE_ID = #{queryObj.ownerNodeId}
			</if>
			<if test='queryObj != null and  queryObj.ownerCourseId != null and queryObj.ownerCourseId != ""'>
				AND  OWNER_COURSE_ID = #{queryObj.ownerCourseId}
			</if>
			<if test='queryObj != null and  queryObj.studentId != null and queryObj.studentId != ""'>
				AND  STUDENT_ID = #{queryObj.studentId}
			</if>
			<if test='queryObj != null and  queryObj.ownerSchoolId != null and queryObj.ownerSchoolId != ""'>
				AND  OWNER_SCHOOL_ID = #{queryObj.ownerSchoolId}
			</if>
			<if test='queryObj != null and  queryObj.ownerStuCourseId != null and queryObj.ownerStuCourseId != ""'>
				AND  OWNER_STU_COURSE_ID = #{queryObj.ownerStuCourseId}
			</if>
		</where>
	</sql>

  <!-- ******* 排序判断  ******
  <sql id="orderBy">
  	<if test="orderBy != null and orderBy!= '' ">
  		order by  ${orderBy}
  	</if>
  </sql>-->


  <!-- 分页条件查询  -->
  <select id="listPage" parameterType="com.edgedo.society.queryvo.SocietyStudentPractiseQuestionQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_student_practise_question
  		<include refid="where"/>
  </select>

	<select id="taskAndStudylistPage" parameterType="com.edgedo.society.queryvo.SocietyStudentPractiseQuestionQuery" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question
		<include refid="where1"/> order by ORDER_NUM desc
	</select>
  
   <!-- 不分页条件查询  -->
  <select id="listByObj" parameterType="com.edgedo.society.queryvo.SocietyStudentPractiseQuestionQuery" resultMap="BaseResultViewMap">
  		select <include refid="Base_Column_List"/> from society_student_practise_question 
  		<include refid="where1"/> order by ORDER_NUM asc
  </select>

	<!--判断学员是否关联该习题-->
	<select id="loadByStuIdAndQuestionId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question
		where OWNER_STUDENT_AND_NODE_ID = #{stuAndNodeId}
		AND STUDENT_ID = #{studentId}
		AND QUERSION_ID = #{questionId}
	</select>

	<select id="loadByStuIdAndQuestionIdNew" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question_${ascii}
		where OWNER_STUDENT_AND_NODE_ID = #{stuAndNodeId}
		AND STUDENT_ID = #{studentId}
		AND QUERSION_ID = #{questionId}
	</select>

	<select id="countFraction" parameterType="com.edgedo.society.queryvo.SocietyStudentPractiseQuestionQuery" resultType="Integer">
		select SUM(QUESTION_SCORE) from society_student_practise_question
		<include refid="where1"/>
	</select>

	<!--统计学员答对的正确个数-->
	<select id="countByStudentAndNodeId" parameterType="com.edgedo.society.queryvo.SocietyStudentPractiseQuestionQuery" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_STUDENT_AND_NODE_ID = #{studentAndNodeViewId}
		and ANSWER_STATE = '1'
	</select>

	<select id="selectTotalNum" parameterType="map" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_SCHOOL_ID = #{ownerSchoolId}
		AND  OWNER_NODE_ID = #{nodeId}
		AND  STUDENT_ID = #{studentId}
	</select>

	<delete id="deleteByStuId" parameterType="string">
		delete from society_student_practise_question where STUDENT_ID=#{id}
	</delete>


	<update id="updateByStuId" parameterType="map">
		update society_student_practise_question set STUDENT_NAME=#{stuName},STUDENT_ID_CARD_NUM=#{idcard}
		where STUDENT_ID=#{stuId}
	</update>

	<select id="countRight" parameterType="map" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_SCHOOL_ID = #{schoolId}
		AND  OWNER_NODE_ID = #{nodeId}
		AND  STUDENT_ID = #{studentId} and OWNER_STU_COURSE_ID=#{ownerStuCourseId} and ANSWER_STATE='1'
	</select>

	<select id="selectByNodeIdAndRight" parameterType="string" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_STUDENT_AND_NODE_ID = #{stuAndNodeId} and ANSWER_STATE='1'
	</select>

	<select id="selectByNodeIdAndErr" parameterType="string" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_STUDENT_AND_NODE_ID = #{stuAndNodeId} and ANSWER_STATE='-1'
	</select>
	<select id="selectByNodeIdAndNull" parameterType="string" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_STUDENT_AND_NODE_ID = #{stuAndNodeId} and ANSWER_STATE='0'
	</select>


	<select id="countWrong" parameterType="map" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_SCHOOL_ID = #{schoolId}
		AND  OWNER_NODE_ID = #{nodeId}
		AND  STUDENT_ID = #{studentId} and OWNER_STU_COURSE_ID=#{ownerStuCourseId} and ANSWER_STATE='-1'
	</select>

	<select id="counNoAns" parameterType="map" resultType="Integer">
		select count(1) from society_student_practise_question
		where OWNER_SCHOOL_ID = #{schoolId}
		AND  OWNER_NODE_ID = #{nodeId}
		AND  STUDENT_ID = #{studentId} and OWNER_STU_COURSE_ID=#{ownerStuCourseId} and ANSWER_STATE='0'
	</select>

	<update id="updateByNodeIdAndNodeName" parameterType="string">
		update society_student_practise_question
		set OWNER_NODE_NAME=#{nodeName}
		where OWNER_NODE_ID=#{nodeId}
	</update>

	<!--	根据学生id 章节id 学生课程关联id 删除此课程章节下的所有学生选择的习题-->
	<delete id="deleteByStuIdAndNodeId" parameterType="string">
		delete from society_student_practise_question
		where STUDENT_ID=#{studentId} and OWNER_NODE_ID=#{nodeId} and OWNER_STU_COURSE_ID=#{stuCourseId}
	</delete>

	<update id="updateByCourseIdAndCourseName" parameterType="map">
		update society_student_practise_question
		set OWNER_COURSE_NAME=#{courseName}
		where OWNER_COURSE_ID=#{courseId}
	</update>

	<select id="countQuestionLength" parameterType="string" resultType="integer">
		select SUM(TIMESTAMPDIFF(MINUTE,CREATE_TIME,LAST_ANSWER_TIME)) from society_student_practise_question
		where DATA_STATE='1' and OWNER_STU_COURSE_ID = #{stuNodeId}
	</select>

	<select id="selectStuNodeId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question
		where DATA_STATE='1' and OWNER_STUDENT_AND_NODE_ID = #{stuNodeId}
	</select>

	<select id="selectByStuCouAndNodeId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question
		where DATA_STATE='1' and OWNER_STU_COURSE_ID = #{ownerStuCourseId} and OWNER_NODE_ID=#{nodeId}  order by ORDER_NUM asc
	</select>

	<select id="selectByStuCouAndNodeId1" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question_${ascii}
		where DATA_STATE='1' and OWNER_STU_COURSE_ID = #{ownerStuCourseId} and OWNER_NODE_ID=#{nodeId}  order by ORDER_NUM asc
	</select>

	<select id="selectByQuesionIdAndNodeIdAndStuCouId" parameterType="string" resultMap="BaseResultViewMap">
		select <include refid="Base_Column_List"/> from society_student_practise_question
		where DATA_STATE='1' and OWNER_STU_COURSE_ID = #{ownerStuCourseId} and OWNER_NODE_ID=#{nodeId} and QUERSION_ID=#{questionId}
	</select>

	<select id="selectByNodeId" parameterType="string" resultType="date">
		select CREATE_TIME from society_student_practise_question
		where DATA_STATE='1' and OWNER_STUDENT_AND_NODE_ID = #{stuNodeId} order by CREATE_TIME desc limit 1
	</select>

	<update id="updateByListId" parameterType="java.util.List">
		<foreach collection="list" item="studentAnswer" index= "index" open="" close="" separator =";">
			update society_student_practise_question
			<set>
				OWNER_COURSE_ID=#{studentAnswer.ownerCourseId},
				OWNER_COURSE_NAME=#{studentAnswer.ownerCourseName},
				OWNER_NODE_ID=#{studentAnswer.ownerNodeId},
				QUERSION_ID=#{studentAnswer.quersionId}
			</set>
			<where>
				ID=#{studentAnswer.id}
			</where>
		</foreach>
	</update>
	<delete id="deleteByIdNew" parameterType="string">
		delete from society_student_practise_question_${ascii}
		where ID=#{id}
	</delete>

	<insert id="insertNew" >
		insert into society_student_practise_question_${ascii}
		(	 ID, OWNER_STUDENT_AND_NODE_ID, STUDENT_ID, STUDENT_ID_CARD_NUM,STUDENT_NAME,
	 OWNER_SCHOOL_ID, OWNER_SCHOOL_NAME, OWNER_COURSE_ID, OWNER_COURSE_NAME,
	 OWNER_NODE_ID, OWNER_NODE_NAME, QUERSION_ID, QUESTION_NAME, QUESTION_TYPE,
	 QUESTION_SCORE, QUESTION_ANALYSIS, GET_SCORE, ORDER_NUM, DATA_STATE,STU_SELECT_OP_ID,ANSWER_STATE,
	 OWNER_STU_COURSE_ID,CREATE_TIME,LAST_ANSWER_TIME,
	 PROVINCE_ID,PROVINCE_NAME, CITY_ID, CITY_NAME, XIANQU_ID, XIANQU_NAME)
		 values(
		   #{question.id},#{question.ownerStudentAndNodeId},#{question.studentId},#{question.studentIdCardNum},
		   #{question.studentName},#{question.ownerSchoolId},#{question.ownerSchoolName},#{question.ownerCourseId},
		   #{question.ownerCourseName},#{question.ownerNodeId},#{question.ownerNodeName},#{question.quersionId},
		   #{question.questionName},#{question.questionType},#{question.questionScore},#{question.questionAnalysis},
		   #{question.getScore},#{question.orderNum},#{question.dataState},#{question.stuSelectOpId},
		   #{question.answerState},#{question.ownerStuCourseId},#{question.createTime},#{question.lastAnswerTime},
		   #{question.provinceId},#{question.provinceName},
		   #{question.cityId},#{question.cityName},#{question.xianquId},#{question.xianquName}
		)
	</insert>

</mapper>