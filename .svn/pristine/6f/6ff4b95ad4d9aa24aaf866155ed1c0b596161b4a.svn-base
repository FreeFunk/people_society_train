<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>标题</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/layuiadmin/style/admin.css" media="all">
    <script type="text/javascript" src="../../../../layuiadmin/js/pinyin/pinyin_dict_notone.js"></script>
    <script type="text/javascript" src="../../../../layuiadmin/js/pinyin/pinyinUtil.js"></script>
    <script type="text/javascript" src="../../../../layuiadmin/js/oos-sdk-6.0.min.js"></script>
    <script type="text/javascript" src="../../../../layuiadmin/js/mimeutil.js"></script>
</head>
<body>

<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-header">
            <font id="courseListTitle"></font>
            <a href="javascript:history.back()" style="    margin-top: 10px;
    position: absolute;
    right: 15px;" class="layui-btn layui-btn-normal layui-btn-xs">
                <i style="position:initial;line-height: inherit" class="layui-icon layui-icon-return"></i>返回</a>
        </div>
        <div class="layui-form layui-card-header layuiadmin-card-header-auto">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">章节名称</label>
                    <div class="layui-input-inline">
                        <input type="text" name="queryObj.nodeName" placeholder="请输入" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <!--课程ID-->
                <input type="hidden" id="ownerCourseId" name="queryObj.ownerCourseId" placeholder="请输入" autocomplete="off" class="layui-input">
                <!--<div class="layui-inline">
                    <label class="layui-form-label">搜索条件2</label>
                    <div class="layui-input-inline">
                        <input type="text" name="queryObj.name" placeholder="请输入" autocomplete="off" class="layui-input">
                    </div>
                </div>-->
                <input type="text" value="" id="tempFileName" hidden>
                <div class="layui-inline">
                    <button class="layui-btn layuiadmin-btn-comm layui-btn-sm" data-type="reload" lay-submit lay-filter="SocietySchoolCourseNode-search">
                        <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>查询
                    </button>
                </div>
            </div>
        </div>
        <div class="layui-card-body">
            <div style="padding-bottom: 10px;">
                <button class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="batchdel">
                    <i class="layui-icon">&#xe640;</i>删除
                </button>
                <button type="button" class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="add">
                    <i class="layui-icon">&#xe654;</i>添加
                </button>
                <!-- <button type="button" class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="addVideoUrl">
                     <i class="layui-icon">&#xe654;</i>视频地址添加
                 </button>-->
                <button type="button" class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="copynode">
                    <i class="layui-icon">&#xe663;</i>从已有章节导入
                </button>
            </div>
            <table id="SocietySchoolCourseNode-list" lay-filter="SocietySchoolCourseNode-list"></table>
            <script type="text/html" id="table-SocietySchoolCourseNode-list">
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="preview"><i class="layui-icon layui-icon-video"></i>预览</a>
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="questionMng"><i class="layui-icon layui-icon-survey"></i>习题管理</a>
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>编辑</a>
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="editVideo"><i class="layui-icon layui-icon-edit"></i>视频编辑</a>
                <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>
            </script>
        </div>
    </div>
</div>
<script src="/layuiadmin/layui/layui.js"></script>
<script>
    layui.config({
        base: '/layuiadmin/' //静态资源所在路径
    }).extend({
        index:'lib/index',
        common:'common',
        $tool:'tool',
        ctyun: 'ctyun/index'
    }).use(['index','table', 'form','common','$tool','ctyun'], function(exports){
        var $ = layui.$
            ,table = layui.table
            ,common = layui.common
            ,admin = layui.admin
            ,ctyun  = layui.ctyun
            ,$tool = layui.$tool
            ,form = layui.form;

        var BucketName = layui.setter.BucketName;
        var accessKeyId = layui.setter.accessKeyId;
        var secretAccessKey = layui.setter.secretAccessKey;
        var endPoint = layui.setter.endPoint;
        var tcloudDomain = layui.setter.tcloudDomain;
        //初始化oos
        var client;
        function config() {
            client = new OOS.S3({
                accessKeyId: accessKeyId,
                secretAccessKey: secretAccessKey,
                endpoint: endPoint,
                signatureVersion: 'v4', // 可选v2 或v4
                apiVersion: '2006-03-01',
                s3ForcePathStyle: true,
                tempFile:''
            });
        }
        // config();


        //获取参数
        var urlParams = $tool.getUrlParams();
        //课程ID
        var courseId = urlParams.id;
        $("#ownerCourseId").val(courseId);
        //课程名
        var courseName = urlParams.courseName+"课程章节列表";
        $("#courseListTitle")[0].innerText = courseName;
        //学校id
        var ownerSchoolId = urlParams.ownerSchoolId;
        //课程名全拼
        var courseNamePinYin = pinyinUtil.getPinyin(getStr(urlParams.courseName)).replace(/\s*/g,"");
        // 过滤所有特殊字符
        function getStr (s) {
            var pattern = new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？↵\r\n]");
            var rs = "";
            for (var i = 0; i < s.length; i++) {
                rs = rs + s.substr(i, 1).replace(pattern, '');
            }
            return rs;
        }
        //查询
        form.on('submit(SocietySchoolCourseNode-search)', function(data){
            var field = data.field;

            //执行重载
            table.reload('SocietySchoolCourseNode-list', {
                where: field,page:{curr:1}
            });
        });

        /*
        * 定义表格
        * */
        defineTable = function () {
            var headers = layui.admin.getTokenHeader();
            table.render({
                elem: '#SocietySchoolCourseNode-list' //指定原始表格的选择器（id选择器）
                ,url:layui.setter.basePath +'/society/societySchoolCourseNode/schoollistpage.jsn' //模拟接口
                ,headers:headers
                ,where:{'queryObj.ownerCourseId':courseId}
                ,method: 'post'
                ,parseData: function(res){ //res 即为原始返回的数据
                    return {
                        "code": res.success, //解析接口状态
                        "msg": res.errMsg, //解析提示文本
                        "count": res.totalCount, //解析数据长度
                        "data": res.list //解析数据列表
                    };
                }
                ,response: {
                    statusCode: true //规定成功的状态码，默认：0
                }
                ,cols: [[
                    {type: 'checkbox', fixed: 'left'}
                    ,{field: 'id',align: 'center', width: 200, title: '主键',sort: true,hide:true}
                    /*,{field: 'createTime',align: 'center', width: 200, title: '创建时间',templet: function(d){
                    return common.DateFormat(d.createTime,"yyyy-MM-dd");},sort: true}
            ,{field: 'createUserId',align: 'center', width: 200, title: '创建人ID',sort: true}
            ,{field: 'createUserName',align: 'center', width: 200, title: '创建人',sort: true}
            ,{field: 'o wnerSchoolId',align: 'center', width: 200, title: '所属学校ID',sort: true}
            ,{field: 'ownerSchoolName',align: 'center', width: 200, title: '所属学校名',sort: true}
            ,{field: 'ownerMajorId',align: 'center', width: 200, title: '所属专业ID',sort: true}
            ,{field: 'ownerMajorName',align: 'center', width: 200, title: '所属专业名',sort: true}
            ,{field: 'ownerCourseClsId',align: 'center', width: 200, title: '所属课程分类ID',sort: true}
            ,{field: 'ownerCourseClsName',align: 'center', width: 200, title: '所属课程分类名',sort: true}
            ,{field: 'ownerCourseId',align: 'center', width: 200, title: '所属课程ID',sort: true}
            ,{field: 'ownerCourseName',align: 'center', width: 200, title: '课程名称',sort: true}*/
                    /*          ,{field: 'imageUrl',align: 'center', width: '10%', title: '章节封面',templet: function(d){
                                                 return "<img style=\"height: 30px;\" src="+d.imageUrl+" >";}
                                                 }*/
                    ,{field: 'orderNum',align: 'center', width: '10%', title: '排序号'}
                    ,{field: 'nodeName',align: 'center', width: '30%', title: '章节名称'}
                    ,{field: 'nodeTimeLength',align: 'center', width: '15%', title: '章节时长(分钟)',
                        templet: function(d){
                            return Math.round(d.nodeTimeLength/60);
                        }
                    }
                    ,{field: 'questionNum',align: 'center', width: '10%', title: '习题数'}
                    /*,{field: 'fileUrl',align: 'center', width: 200, title: '视频地址',sort: true}*/

                    /*     ,{field: 'shState',align: 'center', width: 200, title: '审核状态(1:通过,0:审核中,-1:不通过)',sort: true}
                         ,{field: 'dataState',align: 'center', width: 200, title: '数据状态',sort: true}*/
                    ,{title: '操作', minWidth: 200, align: 'center', fixed: 'right', toolbar: '#table-SocietySchoolCourseNode-list'}
                ]]
                ,autoSort: false
                ,page: true
                ,limit: 50
                ,limits: [10, 20, 30,40,50]
                ,text: {
                    none: '暂无相关数据'
                }
            });

            //为toolbar添加事件响应
            table.on('tool(SocietySchoolCourseNode-list)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                /*var data = obj.data;*///获得当前行数据
                //区分事件
                switch(obj.event){
                    case 'del':
                        deleteVo(obj);
                        break;
                    case 'edit':
                        editVo(obj);
                        break;
                    case 'questionMng':
                        questionMngVo(obj);
                        break;
                    case 'preview':
                        previewVo(obj);
                        break;
                    case 'editVideo':
                        editVideo(obj);
                        break;
                };
            });

            //监听排序事件
            table.on('sort(SocietySchoolCourseNode-list)', function(obj){ //注：sort是工具条事件名，LAY-app-province-list是table原始容器的属性 lay-filter="对应的值"
                var sort = obj.field;
                //默认排序
                switch(obj.field){
                    case 'id':
                        sort ="ID";
                        break;
                    case 'createTime':
                        sort ="CREATE_TIME";
                        break;
                    case 'createUserId':
                        sort ="CREATE_USER_ID";
                        break;
                    case 'createUserName':
                        sort ="CREATE_USER_NAME";
                        break;
                    case 'ownerSchoolId':
                        sort ="OWNER_SCHOOL_ID";
                        break;
                    case 'ownerSchoolName':
                        sort ="OWNER_SCHOOL_NAME";
                        break;
                    case 'ownerMajorId':
                        sort ="OWNER_MAJOR_ID";
                        break;
                    case 'ownerMajorName':
                        sort ="OWNER_MAJOR_NAME";
                        break;
                    case 'ownerCourseClsId':
                        sort ="OWNER_COURSE_CLS_ID";
                        break;
                    case 'ownerCourseClsName':
                        sort ="OWNER_COURSE_CLS_NAME";
                        break;
                    case 'ownerCourseId':
                        sort ="OWNER_COURSE_ID";
                        break;
                    case 'ownerCourseName':
                        sort ="OWNER_COURSE_NAME";
                        break;
                    case 'nodeName':
                        sort ="NODE_NAME";
                        break;
                    case 'nodeTimeLength':
                        sort ="NODE_TIME_LENGTH";
                        break;
                    case 'imageUrl':
                        sort ="IMAGE_URL";
                        break;
                    case 'fileUrl':
                        sort ="FILE_URL";
                        break;
                    case 'orderNum':
                        sort ="ORDER_NUM";
                        break;
                    case 'shState':
                        sort ="SH_STATE";
                        break;
                    case 'dataState':
                        sort ="DATA_STATE";
                        break;
                };
                if(obj.type==null){
                    return;
                }
                //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                table.reload('SocietySchoolCourseNode-list', {
                    initSort: obj//记录初始排序，如果不设的话，将无法标记表头的排序状态。
                    ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                        orderBy: sort+" "+obj.type //排序字段
                    }
                });
            });
        }
        defineTable();

        //删除
        deleteVo = function (obj) {
            layer.confirm('确定删除此记录吗？', function(index){
                layer.close(index);
                var loadIndex =  parent.layer.load(1, {shade: [0.1, '#393D49']});
                admin.req({
                    url:layui.setter.basePath +'/society/societySchoolCourseNode/updateByIds.jsn',
                    data:{'ids':obj.data.id,'courseId':courseId},
                    method:"post",
                    success:function (data) {//BucketName
                        parent.layer.close(loadIndex);
                        table.reload('SocietySchoolCourseNode-list',
                            {page:
                                    { curr: common.deleteJumpPage(obj) // 执行页面跳转方法
                                    }
                            }
                        );
                        layer.msg('删除成功', {
                            icon: 1
                        });
                    },
                });
            });
        }

        editVideo = function(obj){
            layer.open({
                type: 2
                ,title: '视频URL编辑'
                ,content: 'SocietySchoolCourseNodeEditVideoUrl.html'
                ,maxmin: true
                ,area: ['650px', '350px']
                ,btn: ['确定', '取消']
                ,success: function(layero, index){
                    var s = layero.find('iframe');
                    $("id",s[0].contentWindow.document).val(obj.data.id);
                    //给iframe元素赋值
                    var othis = layero.find('iframe').contents().find("#SocietySchoolCourseNodeEditVideoUrl-form").click();

                    othis.find('input[name="id"]').val(obj.data.id);
                    othis.find('input[name="nodeName"]').val(obj.data.nodeName);
                    othis.find('input[name="fileUrlOld"]').val(obj.data.fileUrl);
                    othis.find('input[name="courseId"]').val(courseId);
                    // othis.find('input[name="fileUrl"]').val(obj.data.fileUrl);
                }
                ,yes: function(index, layero){
                    var submit = layero.find('iframe').contents().find("#SocietySchoolCourseNodeEditVideoUrl-form-edit");
                    submit.trigger('click');
                }
            });
        }


        //编辑
        editVo = function (obj) {
            var index = layer.open({
                type: 2
                ,title: '编辑'
                ,content: 'SocietySchoolCourseNodeEdit.html?courseId='+courseId+'&ownerSchoolId='+ownerSchoolId+'&courseNamePinYin='+courseNamePinYin
                ,maxmin: true
                ,area: ['80%', '80%']
                ,btn: ['确定', '取消']
                ,success: function(layero, index){
                    var s = layero.find('iframe');
                    $("id",s[0].contentWindow.document).val(obj.data.id);
                    //给iframe元素赋值
                    var othis = layero.find('iframe').contents().find("#SocietySchoolCourseNode-form").click();

                    othis.find('input[name="id"]').val(obj.data.id);
                    othis.find('input[name="createTime"]').val(obj.data.createTime);
                    othis.find('input[name="createUserId"]').val(obj.data.createUserId);
                    othis.find('input[name="createUserName"]').val(obj.data.createUserName);
                    othis.find('input[name="ownerSchoolId"]').val(obj.data.ownerSchoolId);
                    othis.find('input[name="ownerSchoolName"]').val(obj.data.ownerSchoolName);
                    othis.find('input[name="ownerMajorId"]').val(obj.data.ownerMajorId);
                    othis.find('input[name="ownerMajorName"]').val(obj.data.ownerMajorName);
                    othis.find('input[name="ownerCourseClsId"]').val(obj.data.ownerCourseClsId);
                    othis.find('input[name="ownerCourseClsName"]').val(obj.data.ownerCourseClsName);
                    othis.find('input[name="ownerCourseId"]').val(obj.data.ownerCourseId);
                    othis.find('input[name="ownerCourseName"]').val(obj.data.ownerCourseName);
                    othis.find('input[name="nodeName"]').val(obj.data.nodeName);
                    /* othis.find('input[name="nodeTimeLength"]').val(obj.data.nodeTimeLength);
                     othis.find('input[name="fileUrl"]').val(obj.data.fileUrl);*/

                    /*  othis.find('img[id="nodeImageImgId"]').attr('src', obj.data.imageUrl)*/

                    //othis.find('video[id="videoattr"]').attr('src', obj.data.fileUrl);
                    othis.find('input[name="orderNum"]').val(obj.data.orderNum);
                    othis.find('input[name="shState"]').val(obj.data.shState);
                    othis.find('input[name="dataState"]').val(obj.data.dataState);

                    othis.find('input[id="majorId"]').val(obj.data.ownerMajorId);
                    othis.find('input[id="courseClsId"]').val(obj.data.ownerCourseClsId);
                }
                ,yes: function(index, layero){
                    var submit = layero.find('iframe').contents().find("#SocietySchoolCourseNode-form-edit");
                    submit.trigger('click');
                }
                ,btn2: function(index, layero){
                    debugger
                    var tempFileName = $('#tempFileName').val();
                    if(tempFileName != ''){
                        admin.req({
                            url:layui.setter.basePath +'/society/societySchoolCourseNode/deleteTempFileName.jsn',
                            data:{'tempFileName':tempFileName},
                            method:"post",
                            success:function (data) {
                                layer.closeAll();
                            }
                        });
                    }
                }
                ,cancel: function(){
                    debugger
                    var tempFileName = $('#tempFileName').val();
                    if(tempFileName != ''){
                        admin.req({
                            url:layui.setter.basePath +'/society/societySchoolCourseNode/deleteTempFileName.jsn',
                            data:{'tempFileName':tempFileName},
                            method:"post",
                            success:function (data) {
                                layer.closeAll();
                            }
                        });
                    }
                }
            });
            layer.full(index);
        }
        //视频预览
        previewVo = function (obj) {
            var addr = '<video src="'+obj.data.fileUrl+'" controls="controls" autoplay="autoplay" width="790" height="550">您的浏览器不支持 video 标签。</video>';
            layer.open({
                type: 1
                ,title: obj.data.nodeName+'_视频预览'
                ,maxmin: true
                ,area: ['800px', '600px']
                ,content: addr
            });
        }

        //习题管理
        questionMngVo = function (obj) {
            //课程ID
            var nodeId = obj.data.id;
            //课程名
            var nodeName = obj.data.nodeName;
            //courseName
            window.location.href = 'SocietySchoolCourseNodeQuestionList.html?nodeId='+nodeId+"&nodeName="+encodeURI(nodeName)
                +"&courseName="+encodeURI(courseName);
        }

        //点击事件
        var active = {
            //批量删除
            batchdel: function(){
                var checkStatus = table.checkStatus('SocietySchoolCourseNode-list')
                    ,checkData = checkStatus.data; //得到选中的数据

                if(checkData.length === 0){
                    return layer.msg('请选择数据');
                }

                layer.confirm('确定删除吗？', function(index) {
                    var ids = "" ;
                    for(var i = 0;i<checkData.length;i++){
                        if(ids==""){
                            ids= checkData[i].id;
                        }else {
                            ids = ids+","+checkData[i].id;
                        }
                    }
                    admin.req({
                        url:layui.setter.basePath +'/society/societySchoolCourseNode/updateByIds.jsn',
                        data:{'ids':ids,'courseId':courseId},
                        method:"post",
                        success:function (data) {
                            table.reload('SocietySchoolCourseNode-list',
                                {page:
                                        { curr: common.deleteDulJumpPage(checkStatus) // 执行页面跳转方法
                                        }
                                }
                            );
                            layer.msg('删除成功', {
                                icon: 1
                            });
                        },
                    });
                });
            }
            //添加
            ,add: function(){
                var index = layer.open({
                    type: 2
                    ,title: '添加'
                    ,content: 'SocietySchoolCourseNodeAdd.html?courseId='+courseId+'&ownerSchoolId='+ownerSchoolId+'&courseNamePinYin='+courseNamePinYin
                    ,maxmin: true
                    ,area: ['80%', '80%']
                    ,btn: ['确定', '取消']
                    ,success:function(layero,index){
                    }
                    ,yes: function(index, layero){
                        //点击确认触发 iframe 内容中的按钮提交
                        var submit = layero.find('iframe').contents().find("#SocietySchoolCourseNode-form-submit");

                        submit.click();
                    }
                    ,btn2: function(index, layero){
                        debugger
                        var tempFileName = $('#tempFileName').val();
                        if(tempFileName != ''){
                            admin.req({
                                url:layui.setter.basePath +'/society/societySchoolCourseNode/deleteTempFileName.jsn',
                                data:{'tempFileName':tempFileName},
                                method:"post",
                                success:function (data) {
                                    layer.closeAll();
                                }
                            });
                        }
                    }
                    ,cancel: function(){
                        debugger
                        var tempFileName = $('#tempFileName').val();
                        if(tempFileName != ''){
                            admin.req({
                                url:layui.setter.basePath +'/society/societySchoolCourseNode/deleteTempFileName.jsn',
                                data:{'tempFileName':tempFileName},
                                method:"post",
                                success:function (data) {
                                    layer.closeAll();
                                }
                            });
                        }
                    }
                });
                layer.full(index);
            }
            ,addVideoUrl:function () {
                layer.open({
                    type: 2
                    ,title: '添加'
                    ,content: 'SocietySchoolCourseNodeAddVideoUrl.html?courseId='+courseId+'&ownerSchoolId='+ownerSchoolId+'&courseNamePinYin='+courseNamePinYin
                    ,maxmin: true
                    ,area: ['650px', '450px']
                    ,btn: ['确定', '取消']
                    ,success:function(layero,index){
                    }
                    ,yes: function(index, layero){
                        //点击确认触发 iframe 内容中的按钮提交
                        var submit = layero.find('iframe').contents().find("#SocietySchoolCourseNode-form-submit");

                        submit.click();
                    }
                    ,btn2: function(index, layero){

                    }
                });
            }
            ,copynode: function(){
                //课程id urlParams
                var courseId = urlParams.id;
                //学校id
                var schoolId = urlParams.ownerSchoolId;
                //专业id
                var majorId = urlParams.ownerMajorId;
                //课程分类id
                var courseClsId = urlParams.courseClsId;
                layer.open({
                    type: 2
                    ,title: '复制课程'
                    ,content: 'SocietySchoolCopyCourseNodeList.html?courseId='+courseId+'&schoolId='+schoolId+'&majorId='+majorId
                        +'&courseClsId='+courseClsId+'&courseNamePinYin='+courseNamePinYin
                    ,maxmin: true
                    ,area: ['400px', '450px']
                    ,btn: ['确定复制', '取消']
                    ,success: function(layero, index){
                    }
                    ,yes: function(index, layero){
                        var submit = layero.find('iframe').contents().find("#SocietySchoolCopyCourseNodeList-form-edit");
                        submit.trigger('click');
                    }
                });
            }
        }
        //绑定点击事件
        $('.layui-btn.layuiadmin-btn-comm.layui-btn-sm').on('click', function(){
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });

        var date = Date.prototype;

    });

</script>
</body>
</html>

