<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>标题</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/layuiadmin/style/admin.css" media="all">
    <style type="text/css">
        body .demo-class .layui-layer-btn1{
            background-color: #1E9FFF;
            border-color: #1E9FFF;
            color: #fff;
        }
    </style>
</head>
<body>

<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-header">
            <font id="studentNameTitle"></font>
        </div>
        <div class="layui-form layui-card-header layuiadmin-card-header-auto">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">章节名称</label>
                    <div class="layui-input-inline">
                        <input type="text" name="queryObj.nodeName" placeholder="请输入" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">审核状态</label>
                    <div class="layui-input-inline">
                        <select name="queryObj.examineState">
                            <option value=""></option>
                            <option value="1">已通过</option>
                            <option value="0">未通过</option>
                        </select>
                    </div>
                </div>
                <input type="hidden" id="flag">
<!--                <div class="layui-inline">-->
<!--                    <label class="layui-form-label">完成时间</label>-->
<!--                    <div class="layui-input-inline" style="width: 289px;">-->
<!--                        <input type="text" class="layui-input" id="finsihPeoTime" placeholder=" - ">-->
<!--                    </div>-->
<!--                </div>-->

                <div class="layui-inline" >
                    <button class="layui-btn layuiadmin-btn-comm layui-btn-sm" data-type="reload" lay-submit lay-filter="SocietySchoolCourseInfoList-search">
                        <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>查询
                    </button>
                </div>
            </div>
        </div>

        <div class="layui-card-body">
            <div style="padding-bottom: 10px;">
<!--                <button class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="batchdel">删除</button>-->
<!--                <button class="layui-btn layuiadmin-btn-comm  layui-btn-sm" data-type="add">添加</button>-->
            </div>
            <table id="SocietySchoolCourseInfoList-list" lay-filter="SocietySchoolCourseInfoList-list"></table>
            <script type="text/html" id="table-SocietySchoolCourseInfoList-list">
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="faceEdito">数据加工</a>
<!--                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="examineNodeInfo">编辑</a>-->
<!--                <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>-->
            </script>

        </div>
    </div>
</div>
<!--进度条模板-->
<script type="text/html" id="courseTpl">
    {{#  if(d.courseProgress>=0 && d.courseProgress<=30){ }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-red" lay-percent="{{d.courseProgress}}%"></div>
    </div>
    {{#  }else if(d.courseProgress==null) { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-blue" lay-percent="{{0}}%"></div>
    </div>
    {{#  }else if(d.courseProgress<=70) { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-orange" lay-percent="{{d.courseProgress}}%"></div>
    </div>
    {{#  } else { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar " lay-percent="{{d.courseProgress}}%"></div>
    </div>
    {{#  } }}
</script>

<!--进度条模板-->
<script type="text/html" id="progressTpl">
    {{#  if(d.nodeProgress>=0 && d.nodeProgress<=30){ }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-red" lay-percent="{{d.nodeProgress}}%"></div>
    </div>
    {{#  }else if(d.nodeProgress==null) { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-blue" lay-percent="{{0}}%"></div>
    </div>
    {{#  }else if(d.nodeProgress<=70) { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar layui-bg-orange" lay-percent="{{d.nodeProgress}}%"></div>
    </div>
    {{#  } else { }}
    <div style="margin-top: 12px;" class="layui-progress" lay-showpercent="yes">
        <div  class="layui-progress-bar " lay-percent="{{d.nodeProgress}}%"></div>
    </div>
    {{#  } }}
</script>
<script src="/layuiadmin/layui/layui.js"></script>
<script>
    layui.config({
        base: '/layuiadmin/' //静态资源所在路径
    }).extend({
        index:'lib/index',
        common:'common',
        $tool:'tool'
    }).use(['index','table', 'form','common','$tool','laytpl','element','laydate'], function(exports){
        var $ = layui.$
            ,table = layui.table
            ,common = layui.common
            ,$tool = layui.$tool
            ,laytpl = layui.laytpl
            ,element = layui.element
            ,admin = layui.admin
            ,form = layui.form
            ,laydate = layui.laydate;
        var queryArgs = $tool.getUrlParams();//获取查询参数
        var classId = queryArgs.classId;
        var studentId = queryArgs.studentId;
        var ownerSchoolId = queryArgs.ownerSchoolId;

        var studentName = queryArgs.studentName;
        var studentIdCardNum = queryArgs.studentIdCardNum;
        var ownerMajorName = queryArgs.ownerMajorName;
        var className = queryArgs.className;
        var courseName = queryArgs.courseName;
        var courseId = queryArgs.courseId;
        var ownerStudentAndCourseId = queryArgs.id;
        var ownerSchoolName = queryArgs.ownerSchoolName;
        var ownerMajorName = queryArgs.ownerMajorName;
        var className = queryArgs.className;

        var studentNameTitle = "学习详情 "+"（姓名："+studentName+"，身份证号："+studentIdCardNum+"，专业："+ownerMajorName+"，班级："+className+
        "，课程："+courseName+"）";
        $("#studentNameTitle")[0].innerText = studentNameTitle;

        //查询
        form.on('submit(SocietySchoolCourseInfoList-search)', function(data){
            var field = data.field;
            // var finsihPeoTime = $('#finsihPeoTime').val();
            // var arr = finsihPeoTime.split(' - ');
            // field["queryObj.finishStartTime"] = arr[0];
            // field["queryObj.finishEndTime"] = arr[1];
            //执行重载
            table.reload('SocietySchoolCourseInfoList-list', {
                where: field,
            });
        });

        /*
     * 定义表格
     * */
        defineNodeTable = function () {
            var headers = layui.admin.getTokenHeader();
            table.render({
                elem: '#SocietySchoolCourseInfoList-list' //指定原始表格的选择器（id选择器）
                ,url:layui.setter.basePath +'/society/societyStudentAndNode/selectlistpage.jsn' //模拟接口
                ,headers:headers
                ,method: 'post'
                ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                    'queryObj.ownerCourseId': courseId,
                    'queryObj.ownerStudentAndCourseId': ownerStudentAndCourseId,
                    'queryObj.studentId': studentId,
                    'queryObj.ownerSchoolId':ownerSchoolId
                }
                ,parseData: function(res){ //res 即为原始返回的数据
                    return {
                        "code": res.success, //解析接口状态
                        "msg": res.errMsg, //解析提示文本
                        "count": res.totalCount, //解析数据长度
                        "data": res.list //解析数据列表
                    };
                }
                ,response: {
                    statusCode: true //规定成功的状态码，默认：0
                }
                ,cols: [[
                    {type: 'checkbox', fixed: 'left'}
                    // ,{field: 'id',align: 'center', width: 200, title: '主键',sort: true,hide:true}
                    // ,{field: 'ownerStudentAndCourseId',align: 'center', width: 200, title: '所属课程关联表ID',sort: true}
                    // ,{field: 'ownerSchoolId',align: 'center', width: 200, title: '所属学校ID',sort: true}
                    // ,{field: 'studentId',align: 'center', width: 200, title: '学员ID',sort: true}
                    ,{field: 'orderNum',align: 'center',width: '6%', title: '序号',/*sort: true,*/
                        templet: function (d) {
                            return d.orderNum;
                        }
                    }
                    ,{field: 'nodeName',align: 'center', width: '18%', title: '章节名称'/*sort: true,*/
                       /* templet: function (d) {
                            return '<a lay-event="nodeNameOnlick" style="cursor: pointer;\n' +
                                'text-decoration: none;\n' +
                                '    border-bottom: 1px solid #01aaed;\n' +
                                '    color: #01aaed;">' +d.nodeName+'</a>';
                        }*/
                    }
                    ,{field: 'nodeLength',align: 'center', width: '10%', title: '章节时长',
                        templet: function (d) {
                            return formatSeconds(d.nodeLength);
                        }
                    }
                    ,{field: 'studyTimeLength',align: 'center', width: '10%', title: '学习时长',
                        templet: function (d) {
                            if ((typeof d.studyTimeLength)=='undefined' ||  d.studyTimeLength==0){
                                return "0秒";
                            }
                            return formatSeconds(d.studyTimeLength);
                        }
                    }
                    ,{field: 'learnIsFinished',align: 'center', width: '8%', title: '是否完成',
                        templet: function (d) {
                            if(d.learnIsFinished=='1'){
                                return "是";
                            }else{
                                return "否";
                            }
                        }
                    }
                    ,{field: 'examineState',align: 'center', width: '8%', title: '审核状态',
                        templet: function (d) {
                            if(d.examineState=='1'){
                                return "已通过";
                            }else{
                                return "未通过";
                            }
                        }
                    }
                    ,{field: 'finishTime',align: 'center', width: '10%', title: '完成时间',
                        templet: function (d) {
                            if( $.isEmptyObject(d.finishTime)){
                                if(d.nodeProgress!=0){
                                    return "未学完";
                                }else {
                                    return "未开始学习";
                                }
                            }else {
                                return common.DateFormat(d.finishTime,"yyyy-MM-dd HH:mm:ss");
                            }
                        }
                    }
                    ,{field: 'nodeProgress',align: 'center', title: '章节进度', templet:'#progressTpl'}
                    ,{title: '操作', width: '13%', align: 'center', fixed: 'right', toolbar: '#table-SocietySchoolCourseInfoList-list'}
                ]]
                ,autoSort: false
                ,page: true
                ,limit: 50
                ,limits: [10, 20, 30,40,50,60,70]
                ,text: {
                    none: '暂无相关数据'
                }
                ,done:function () {
                    element.init();
                }

            });
            //监听排序事件
            table.on('sort(SocietySchoolCourseInfoList-list)', function(obj){ //注：sort是工具条事件名，LAY-app-province-list是table原始容器的属性 lay-filter="对应的值"
                var sort = obj.field;
                //默认排序
                switch(obj.field){
                    case 'orderNum':
                        sort ="ORDER_NUM";
                        break;
                    case 'finishTime':
                        sort ="FINISH_TIME";
                        break;
                };
                if(obj.type==null){
                    return;
                }
                //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                table.reload('SocietySchoolCourseInfoList-list', {
                    initSort: obj//记录初始排序，如果不设的话，将无法标记表头的排序状态。
                    ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                        orderBy: sort+" "+obj.type //排序字段
                    }
                });
            });

            //为toolbar添加事件响应
            table.on('tool(SocietySchoolCourseInfoList-list)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                /*var data = obj.data;*///获得当前行数据
                //区分事件
                switch(obj.event){
                    case 'courseNameOnlick':
                        courseNameOnlick(obj);
                        break;
                    case 'examineNodeInfo':
                        examineNodeInfo(obj);
                        break;
                    case 'del':
                        deleteVo(obj);
                        break;
                    case 'nodeNameOnlick':
                        nodeNameOnlick(obj);
                        break;
                    case 'faceEdito':
                        faceEdito(obj);
                        break;
                };
            });
        }
        defineNodeTable();

        nodeNameOnlick = function(obj){
            newOpen("views/society/datamachineadmin/studentAndCourse/SocietyStudentStudyProcessFaceList.html", obj.data,obj.data.studentName+"人脸记录");
        }

        faceEdito = function(obj){
            var index  = layer.open({
                type: 2
                ,title: obj.data.studentName+'人脸编辑'
                ,content: newUrlStr('SocietyStudentStudyProcessFaceList.html',obj.data)
                ,area: ['950px', '600px']
                ,btn: ['下一步', '取消']
                ,success: function(layero, index){

                }
                ,yes: function(index1, layero){
                    //判断是否合格人脸
                    var faceNum = layero.find('iframe').contents().find("#faceNum").val();
                    if(faceNum<5){
                        return layer.msg('人脸不够五次!');
                    }
                    layer.close(index1);
                    examineNodeInfo(obj);
                }
            });
            layer.full(index);
            // newOpen("views/society/datamachineadmin/studentAndCourse/SocietyStudentStudyProcessFaceList.html", obj.data,obj.data.studentName+"人脸记录");
        }

        function newOpen(url,params,str) {
            var pStr = '';
            for(var p in params){
                if(pStr.indexOf("?")==-1){
                    pStr += "?"+p+"="+encodeURI(params[p]);
                }else {
                    pStr += "&"+p+"="+encodeURI(params[p]);
                }
            }
            top.layui.index.openTabsPage(url+pStr,str);
        }

        function newUrlStr(url,params) {
            var pStr = '';
            for(var p in params){
                if(pStr.indexOf("?")==-1){
                    pStr += "?"+p+"="+encodeURI(params[p]);
                }else {
                    pStr += "&"+p+"="+encodeURI(params[p]);
                }
            }
            return url+pStr;
        }

        //删除
        deleteVo = function (obj) {
            layer.confirm('确定删除此记录吗？', function(index){
                admin.req({
                    url:layui.setter.basePath +'/society/societyStudentAndNode/deleteByIds.jsn',
                    data:{'ids':obj.data.id},
                    method:"post",
                    success:function (data) {
                        table.reload('SocietySchoolCourseInfoList-list',
                            {page:
                                    { curr: common.deleteJumpPage(obj) // 执行页面跳转方法
                                    }
                            }
                        );
                        layer.close(index);
                        layer.msg('删除成功', {
                            icon: 1
                        });
                    },
                });
            });
        }


        /**
         * 点击课程名称 查询出对应的学生下的该课程的小节学习进度  传参 所属课程关联表ID(该记录主键)  学生id 课程id
         * 对应表 society_school_class_and_course
         * @param obj
         */
        courseNameOnlick = function (obj) {
            //跳转页面
            location.href="SocietySchoolCourseInfoList.html?ownerStudentAndCourseId="+ encodeURI(obj.data.id)
                + "&courseId="+ encodeURI(obj.data.courseId) +
                "&studentId=" + encodeURI(obj.data.studentId)
                + "&ownerSchoolId="+ encodeURI(obj.data.ownerSchoolId)
                + "&courseName="+ encodeURI(obj.data.courseName)+"&studentNameTitle="+ encodeURI(studentNameTitle);
        }

        examineNodeInfo = function(obj){

            var index  = layer.open({
                type: 2
                ,title: '章节编辑'
                ,content: 'SocietyStudentAndNodeEdit.html'
                ,area: ['950px', '600px']
                ,btn: ['下一步','取消']
                ,success: function(layero, index){
                    var s = layero.find('iframe');
                    $("id",s[0].contentWindow.document).val(obj.data.id);
                    //给iframe元素赋值
                    var othis = layero.find('iframe').contents().find("#SocietyStudentAndNodeEdit-form").click();

                    othis.find('input[name="id"]').val(obj.data.id);
                    var x = obj.data.nodeLength;
                    var y = 0;
                    var lastLearnLocation = parseInt(Math.random() * (x - y + 1) + y);
                    othis.find('input[name="lastLearnLocation"]').val(formatSeconds(lastLearnLocation));
                    // othis.find('input[name="studyTimeLength"]').val(formatSeconds(obj.data.studyTimeLength));
                    othis.find('input[name="maxLearnLocation"]').val(formatSeconds(obj.data.nodeLength));
                    othis.find('input[id="nodeLength"]').val(obj.data.nodeLength);

                    othis.find('input[name="ownerCourseName"]').val(obj.data.ownerCourseName);
                    othis.find('input[name="nodeName"]').val(obj.data.nodeName);
                    othis.find('input[name="studentName"]').val(obj.data.studentName);
                    othis.find('input[name="studentIdCardNum"]').val(obj.data.studentIdCardNum);
                    // othis.find('input[name="nodeProgress"]').val(obj.data.nodeProgress);

                    othis.find('input[name="totalQuestionNum"]').val(obj.data.totalQuestionNum);

                    othis.find('select[id="questionIsFinished"]').val(obj.data.questionIsFinished);
                    othis.find('input[name="nodeQuestionScore"]').val(obj.data.nodeQuestionScore);
                    othis.find('input[name="finishNodeNum"]').val(obj.data.finishNodeNum);
                    othis.find('select[id="learnIsFinished"]').val(obj.data.learnIsFinished);

                    othis.find('select[id="questionIsPass"]').val(obj.data.questionIsPass);
                    othis.find('input[name="finishTime"]').val(obj.data.finishTime);
                    othis.find('input[name="createTime"]').val(obj.data.createTime);

                    othis.find('input[id="ownerStudentAndCourseId"]').val(obj.data.ownerStudentAndCourseId);
                    othis.find('input[id="nodeId"]').val(obj.data.nodeId);
                    othis.find('input[id="studentId"]').val(obj.data.studentId);
                }
                ,yes: function(index, layero){
                    var submit = layero.find('iframe').contents().find("#SocietyStudentAndNodeEdit-form-edit");
                    submit.trigger('click');
                    var flag = $('#flag').val();
                    if(flag=='0'){
                        taskQuestion(obj);
                    }
                }
            });

        }
        taskQuestion = function(obj){
            var index  = layer.open({
                type: 2
                ,title: obj.data.studentName+'生成的答题情况'
                ,content: newUrlStr('taskQuestionInfo.html',obj.data)
                ,area: ['1100px', '600px']
                ,btn: ['关闭']
                ,success: function(layero, index) {

                }
            });
            layer.full(index);
            // newOpen("views/society/datamachineadmin/studentAndCourse/SocietyStudentStudyProcessFaceList.html", obj.data,obj.data.studentName+"人脸记录");
        }


        /**
         * 格式化秒
         * @param int  value 总秒数
         * @return string result 格式化后的字符串
         */
        function formatSeconds(value) {
            var theTime = parseInt(value);// 需要转换的时间秒
            var theTime1 = 0;// 分
            var theTime2 = 0;// 小时
            var theTime3 = 0;// 天
            if(theTime > 60) {
                theTime1 = parseInt(theTime/60);
                theTime = parseInt(theTime%60);
                if(theTime1 > 60) {
                    theTime2 = parseInt(theTime1/60);
                    theTime1 = parseInt(theTime1%60);
                    if(theTime2 > 24){
                        //大于24小时
                        theTime3 = parseInt(theTime2/24);
                        theTime2 = parseInt(theTime2%24);
                    }
                }
            }
            var result = '';
            if(theTime > 0){
                result = ""+parseInt(theTime)+"秒";
            }
            if(theTime1 > 0) {
                result = ""+parseInt(theTime1)+"分钟"+result;
            }
            if(theTime2 > 0) {
                result = ""+parseInt(theTime2)+"小时"+result;
            }
            if(theTime3 > 0) {
                result = ""+parseInt(theTime3)+"天"+result;
            }
            return result;
        }

        //点击事件
        var active = {
            //批量删除
            batchdel: function(){
                var checkStatus = table.checkStatus('SocietySchoolCourseInfoList-list')
                    ,checkData = checkStatus.data; //得到选中的数据

                if(checkData.length === 0){
                    return layer.msg('请选择数据');
                }

                layer.confirm('确定删除吗？', function(index) {
                    var ids = "" ;
                    for(var i = 0;i<checkData.length;i++){
                        if(ids==""){
                            ids= checkData[i].id;
                        }else {
                            ids = ids+","+checkData[i].id;
                        }
                    }
                    admin.req({
                        url:layui.setter.basePath +'/society/societyStudentAndNode/deleteByIds.jsn',
                        data:{'ids':ids},
                        method:"post",
                        success:function (data) {
                            if(data.success){
                                table.reload('SocietySchoolCourseInfoList-list',
                                    {page:
                                            { curr: common.deleteDulJumpPage(checkStatus) // 执行页面跳转方法
                                            }
                                    }
                                );
                                layer.msg('删除成功', {
                                    icon: 1
                                });
                            }
                        },
                    });
                });
            }
            //添加
            ,add: function(){
                layer.open({
                    type: 2
                    ,title: '添加'
                    ,content: 'SocietySchoolMajorAdd.html'
                    ,area: ['600px', '450px']
                    ,btn: ['确定', '取消']
                    ,success:function(layero,index){
                    }
                    ,yes: function(index, layero){
                        //点击确认触发 iframe 内容中的按钮提交
                        var submit = layero.find('iframe').contents().find("#SocietySchoolMajor-form-submit");
                        submit.click();
                    }
                });
            }
        }

        //绑定点击事件
        $('.layui-btn.layui-btn-normal.layui-btn-sm').on('click', function(){
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });

        //日期时间范围
        laydate.render({
            elem: '#finsihPeoTime'
            ,type: 'datetime'
            ,range: true
            ,trigger: 'click'
        });

    });

</script>
</body>
</html>

