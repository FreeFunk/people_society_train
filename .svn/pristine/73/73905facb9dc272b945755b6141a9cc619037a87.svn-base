<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>标题</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/layuiadmin/style/admin.css" media="all">
    <style type="text/css">
        .layui-table-cell {
            padding: 0 5px;
        }
        .layui-table-body{overflow-x: hidden;}
        .laytable-cell-1-0-5{  /*最后的pic为字段的field*/
            height: 100%;
            max-width: 100%;
        }
    </style>
</head>
<body>

<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body">
            <div>章节学习进度：<div style="width: 85%;display: inline-block" id="nodeProgress" class="demo-slider"></div></div>
        </div>

        <div>
            <table id="questionTable" class="layui-table">

            </table>
        </div>
        <div class="layui-hide">
            <button type="button" class="layui-btn layuiadmin-btn-comm" id="SocietyExamineNodeInfo-form-submit1"  lay-submit lay-filter="SocietyExamineNodeInfo-form-submit1">
                通过
            </button>
        </div>
        <div class="layui-hide">
            <button type="button" class="layui-btn layuiadmin-btn-comm" id="SocietyExamineNodeInfo-form-submit"  lay-submit lay-filter="SocietyExamineNodeInfo-form-submit">
                确认添加
            </button>
        </div>
    </div>
</div>

<script src="/layuiadmin/layui/layui.js"></script>
<script>
    layui.config({
        base: '/layuiadmin/' //静态资源所在路径
    }).extend({
        index:'lib/index',
        common:'common',
        viewer: 'layui_ext/viewer/viewer',
        $tool:'tool'
    }).use(['index','table', 'form','common','slider','$tool'], function(exports){
        var $ = layui.$
            ,table = layui.table
            ,common = layui.common
            ,admin = layui.admin
            ,slider = layui.slider
            ,$tool = layui.$tool
            ,form = layui.form;


        var queryArgs = $tool.getQueryParam();//获取查询参数
        var studentId = queryArgs['studentId'];
        var nodeId = queryArgs['nodeId'];
        var ownerCourseId = queryArgs['ownerCourseId'];
        var stuCourseId = queryArgs['stuCourseId'];
        var stuAndNodeId = queryArgs['stuAndNodeId'];

        function init(){
            admin.req({
                url:layui.setter.basePath +'/society/societyStudentAndNode/loadById.jsn',
                async:false,
                data:{
                    'id':stuAndNodeId
                },
                method:"post",
                success:function (data) {
                    //开启输入框
                    slider.render({
                        elem: '#nodeProgress'
                        ,value: data.data.nodeProgress
                        ,input: true //输入框
                    });
                }
            });
        }
        init();




        /*
        * 定义表格
        * */
        defineTable = function () {
            var headers = layui.admin.getTokenHeader();
            table.render({
                elem: '#SocietyStudentStudyProcessFace-list' //指定原始表格的选择器（id选择器）
                ,url:layui.setter.basePath +'/society/societyStudentStudyProcessFace/listpage.jsn' //模拟接口
                ,headers:headers
                ,method: 'post'
                ,where:{
                    'queryObj.stuCourseId':stuCourseId,
                    'queryObj.ownerNodeId':nodeId
                }
                ,parseData: function(res){ //res 即为原始返回的数据
                    return {
                        "code": res.success, //解析接口状态
                        "msg": res.errMsg, //解析提示文本
                        "count": res.totalCount, //解析数据长度
                        "data": res.list //解析数据列表
                    };
                }
                ,response: {
                    statusCode: true //规定成功的状态码，默认：0
                }
                ,cols: [[
                     {type: 'checkbox', fixed: 'left',style:'padding: 47px 0;'}
                 ,{field: 'id',align: 'center', width: 200, title: '主键',sort: true,hide:true}
                    ,{field: 'createTime',align: 'center', width: '20%', title: '创建时间',sort: true}
                    /*       ,{field: 'stuCourseId',align: 'center', width: 200, title: '学生课程id',sort: true}
                           ,{field: 'ownerSchoolId',align: 'center', width: 200, title: '所属学校ID',sort: true}
                           ,{field: 'ownerSchoolName',align: 'center', width: 200, title: '所属学校名',sort: true}
                           ,{field: 'ownerCourseId',align: 'center', width: 200, title: '所属课程ID',sort: true}
                           ,{field: 'ownerCourseName',align: 'center', width: 200, title: '课程名称',sort: true}
                           ,{field: 'ownerNodeId',align: 'center', width: 200, title: '所属小节ID',sort: true}*/
                    ,{field: 'ownerNodeName',align: 'center', width: '26%', title: '章节名称'}
                    /* ,{field: 'ownerStudyProcessId',align: 'center', width: 200, title: '所属学习过程ID',sort: true}*/
                    /* ,{field: 'studentId',align: 'center', width: 200, title: '学员ID'}*/
                    ,{field: 'studentName',align: 'center', width: '12%', title: '学员姓名'}
                    ,{field: 'faceImageUrl',align: 'center', width: '15%', title: '人脸照',
                        templet: '#faceImgTpl'
                    }
                    ,{field: 'faceScore',align: 'center', width: '10%', title: '人脸匹配度'}
                    /*,{field: 'faceType',align: 'center', width: 200, title: '人脸类型(签到/抽查)',sort: true}
                    ,{field: 'timeOutSec',align: 'center', width: 200, title: '随机的超时时间',sort: true}*/
                    ,{title: '操作', width: '10%', align: 'center', fixed: 'right', toolbar: '#table-SocietyStudentStudyProcessFace-list'}
                ]]
                ,autoSort: false
                ,page: true
                ,limit: 10
                ,limits: [10, 20, 30,40]
                ,text: {
                    none: '暂无相关数据'
                }
            });

            //为toolbar添加事件响应
            table.on('tool(SocietyStudentStudyProcessFace-list)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                /*var data = obj.data;*///获得当前行数据
                //区分事件
                switch(obj.event){
                    case 'del':
                        deleteVo(obj);
                        break;
                    case 'edit':
                        editVo(obj);
                        break;
                    case 'getImg':
                        getImg(obj,this);
                        break;
                };
            });
        }
        defineTable();




        //监听添加事件
        form.on('submit(SocietyExamineNodeInfo-form-submit)', function(data){

            var index = parent.layer.getFrameIndex(window.name);
            layer.open({
                title: '未审核原因'
                ,content: '<html><div class="layui-form">\n' +
                    '<div class="layui-form-item">'+
                    '   <textarea id="record" placeholder="注明原因" class="layui-textarea"></textarea>\n' +
                    '  </div></div></html>'
                ,maxmin: true
                ,area: ['440px', '250px']
                ,btn: ['确定', '取消']
                ,success:function(layero,index){

                }
                ,yes: function(index, layero){
                    var record = $('#record').val();
                    admin.req({
                        url:layui.setter.basePath +'/society/societyNodeExamineRecord/examineStudentNodeInfo.jsn',
                        async:false,
                        data:{
                            'stuCourseId':stuCourseId,
                            'nodeId':nodeId,
                            'ownerCourseId':ownerCourseId,
                            'studentId':studentId,
                            'record':record
                        },
                        method:"post",
                        success:function (data) {
                            if(data.success){
                                parent.layui.table.reload('SocietySchoolCourseInfoList-list'); //重载表格
                                parent.layer.close(index); //再执行关闭
                                parent.layer.msg('操作成功', {
                                    icon: 1
                                });
                            }else {
                                parent.layer.msg('操作失败', {
                                    icon: 1
                                });
                            }
                        },
                    });
                }
            });
        });


        //监听添加事件 通过
        form.on('submit(SocietyExamineNodeInfo-form-submit1)', function(data){
            var index1 = parent.layer.getFrameIndex(window.name);
            layer.confirm('确认审核通过吗？', function(index){
                var loadIndex =  parent.layer.load(1, {shade: [0.1, '#393D49']});
                admin.req({
                    url:layui.setter.basePath +'/society/societyStudentAndNode/examineStateInfo.jsn',
                    data:{
                        'stuCourseId':stuCourseId,
                        'nodeId':nodeId
                    },
                    method:"post",
                    success:function (data) {
                        parent.layer.close(loadIndex);
                        parent.layui.table.reload('SocietySchoolCourseInfoList-list'); //重载表格
                       layer.close(index); //再执行关闭
                        parent.layer.close(index1); //再执行关闭
                        parent.layer.msg('审核通过', {
                            icon: 1
                        });
                    },
                });
            });
        });

        //绑定点击事件
        $('.layui-btn.layuiadmin-btn-comm.layui-btn-sm').on('click', function(){
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });


    });

</script>
</body>
</html>

